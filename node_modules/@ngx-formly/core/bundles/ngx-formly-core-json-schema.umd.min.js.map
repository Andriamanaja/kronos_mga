{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@ngx-formly/core/json-schema/formly-json-schema.service.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__read","o","m","Symbol","iterator","r","ar","next","done","push","value","error","isEmpty","v","undefined","isConst","schema","enum","clearFieldModel","field","key","formControl","patchValue","markAsUntouched","model","fieldGroup","forEach","f","checkField","_checkField","FormlyJsonschema","toFieldConfig","options","_toFieldConfig","_this_1","resolveSchema","type","guessType","defaultValue","default","templateOptions","label","title","readonly","readOnly","description","addValidator","_a","parsers","Number","min","minimum","max","maximum","exclusiveMinimum","exclusiveMaximum","step","multipleOf","schemaType","Array","isArray","includes","prop","resolveDependencies","propDeps_1","schemaDeps_1","keys","properties","required","expressionProperties","templateOptions.required","some","k","oneOfSchema","oneOf","every","_b","constSchema","hideExpression","const","resolveMultiSchema","anyOf","minItems","maxItems","uniqueItems","from","Set","map","JSON","stringify","items","isEnum","_this_2","defineProperty","get","itemSchema","additionalItems","enumerable","configurable","multiple","toEnumOptions","formlyConfig","reverseDeepMerge","$ref","resolveDefinition","allOf","resolveAllOf","baseSchema","Error","reduce","base","__spread","concat","mode","schemas","subscription","hooks","onInit","modeField","parent","isFieldValid","valid","filter","normalizedValue","formattedValue","FormControl","setTimeout","valueChanges","pipe","startWith","pairwise","subscribe","q","indexToClear","find","onDestroy","unsubscribe","fs","control","split","uri","pointer","definition","def","path","annotation","deps","schemaDeps","dependencies","dependency","dep","name","validator","validators","toEnum","Injectable","args","providedIn"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { JSONSchema7, JSONSchema7TypeName } from 'json-schema';\nimport { ÉµreverseDeepMerge as reverseDeepMerge } from '@ngx-formly/core';\nimport { AbstractControl, FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { pairwise, startWith } from 'rxjs/operators';\n\nexport interface FormlyJsonschemaOptions {\n  /**\n   * allows to intercept the mapping, taking the already mapped\n   * formly field and the original JSONSchema source from which it\n   * was mapped.\n   */\n  map?: (mappedField: FormlyFieldConfig, mapSource: JSONSchema7) => FormlyFieldConfig;\n}\n\nfunction isEmpty(v: any) {\n  return v === '' || v === undefined || v === null;\n}\n\nfunction isConst(schema: JSONSchema7) {\n  return schema.hasOwnProperty('const') || (schema.enum && schema.enum.length === 1);\n}\n\nfunction clearFieldModel(field: FormlyFieldConfig) {\n  if (field.key) {\n    field.formControl.patchValue(undefined);\n    field.formControl.markAsUntouched();\n    delete field.model[field.key];\n  } else if (field.fieldGroup) {\n    field.fieldGroup.forEach(f => clearFieldModel(f));\n  }\n}\n\nfunction checkField(field: FormlyFieldConfig) {\n  (field.options as any)._checkField(field);\n}\n\nfunction isFieldValid(field: FormlyFieldConfig): boolean {\n  if (field.key) {\n    return field.formControl.valid;\n  }\n\n  return field.fieldGroup.every(f => isFieldValid(f));\n}\n\ninterface IOptions extends FormlyJsonschemaOptions {\n  schema: JSONSchema7;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyJsonschema {\n  toFieldConfig(schema: JSONSchema7, options?: FormlyJsonschemaOptions): FormlyFieldConfig {\n    return this._toFieldConfig(schema, { schema, ...(options || {}) });\n  }\n\n  private _toFieldConfig(schema: JSONSchema7, options: IOptions): FormlyFieldConfig {\n    schema = this.resolveSchema(schema, options);\n\n    let field: FormlyFieldConfig = {\n      type: this.guessType(schema),\n      defaultValue: schema.default,\n      templateOptions: {\n        label: schema.title,\n        readonly: schema.readOnly,\n        description: schema.description,\n      },\n    };\n\n    switch (field.type) {\n      case 'null': {\n        this.addValidator(field, 'null', ({ value }) => value === null);\n        break;\n      }\n      case 'number':\n      case 'integer': {\n        field.parsers = [v => isEmpty(v) ? null : Number(v)];\n        if (schema.hasOwnProperty('minimum')) {\n          field.templateOptions.min = schema.minimum;\n        }\n\n        if (schema.hasOwnProperty('maximum')) {\n          field.templateOptions.max = schema.maximum;\n        }\n\n        if (schema.hasOwnProperty('exclusiveMinimum')) {\n          field.templateOptions.exclusiveMinimum = schema.exclusiveMinimum;\n          this.addValidator(field, 'exclusiveMinimum', ({ value }) => isEmpty(value) || (value > schema.exclusiveMinimum));\n        }\n\n        if (schema.hasOwnProperty('exclusiveMaximum')) {\n          field.templateOptions.exclusiveMaximum = schema.exclusiveMaximum;\n          this.addValidator(field, 'exclusiveMaximum', ({ value }) => isEmpty(value) || (value < schema.exclusiveMaximum));\n        }\n\n        if (schema.hasOwnProperty('multipleOf')) {\n          field.templateOptions.step = schema.multipleOf;\n          this.addValidator(field, 'multipleOf', ({ value }) => isEmpty(value) || (value % schema.multipleOf === 0));\n        }\n        break;\n      }\n      case 'string': {\n        const schemaType = schema.type as JSONSchema7TypeName;\n        if (Array.isArray(schemaType) && schemaType.includes('null')) {\n          field.parsers = [v => isEmpty(v) ? null : v];\n        }\n\n        ['minLength', 'maxLength', 'pattern'].forEach(prop => {\n          if (schema.hasOwnProperty(prop)) {\n            field.templateOptions[prop] = schema[prop];\n          }\n        });\n        break;\n      }\n      case 'object': {\n        field.fieldGroup = [];\n\n        const [propDeps, schemaDeps] = this.resolveDependencies(schema);\n        Object.keys(schema.properties || {}).forEach(key => {\n          const f = this._toFieldConfig(<JSONSchema7> schema.properties[key], options);\n          field.fieldGroup.push(f);\n          f.key = key;\n          if (Array.isArray(schema.required) && schema.required.indexOf(key) !== -1) {\n            f.templateOptions.required = true;\n          }\n          if (f.templateOptions && !f.templateOptions.required && propDeps[key]) {\n            f.expressionProperties = {\n              'templateOptions.required': m => m && propDeps[key].some(k => !isEmpty(m[k])),\n            };\n          }\n\n          if (schemaDeps[key]) {\n            const getConstValue = (s: JSONSchema7) => {\n              return s.hasOwnProperty('const') ? s.const : s.enum[0];\n            };\n\n            const oneOfSchema = schemaDeps[key].oneOf;\n            if (\n              oneOfSchema\n              && oneOfSchema.every(o => o.properties && o.properties[key] && isConst(o.properties[key]))\n            ) {\n              oneOfSchema.forEach(oneOfSchema => {\n                const { [key]: constSchema, ...properties } = oneOfSchema.properties;\n                field.fieldGroup.push({\n                  ...this._toFieldConfig({ ...oneOfSchema, properties }, options),\n                  hideExpression: m => !m || getConstValue(constSchema) !== m[key],\n                });\n              });\n            } else {\n              field.fieldGroup.push({\n                ...this._toFieldConfig(schemaDeps[key], options),\n                hideExpression: m => !m || isEmpty(m[key]),\n              });\n            }\n\n          }\n        });\n\n        if (schema.oneOf) {\n          field.fieldGroup.push(this.resolveMultiSchema(\n            'oneOf',\n            <JSONSchema7[]> schema.oneOf,\n            options,\n          ));\n        }\n\n        if (schema.anyOf) {\n          field.fieldGroup.push(this.resolveMultiSchema(\n            'anyOf',\n            <JSONSchema7[]> schema.anyOf,\n            options,\n          ));\n        }\n        break;\n      }\n      case 'array': {\n        if (schema.hasOwnProperty('minItems')) {\n          field.templateOptions.minItems = schema.minItems;\n          this.addValidator(field, 'minItems', ({ value }) => isEmpty(value) || (value.length >= schema.minItems));\n        }\n        if (schema.hasOwnProperty('maxItems')) {\n          field.templateOptions.maxItems = schema.maxItems;\n          this.addValidator(field, 'maxItems', ({ value }) => isEmpty(value) || (value.length <= schema.maxItems));\n        }\n        if (schema.hasOwnProperty('uniqueItems')) {\n          field.templateOptions.uniqueItems = schema.uniqueItems;\n          this.addValidator(field, 'uniqueItems', ({ value }) => {\n            if (isEmpty(value) || !schema.uniqueItems) {\n              return true;\n            }\n\n            const uniqueItems = Array.from(\n              new Set(value.map((v: any) => JSON.stringify(v))),\n            );\n\n            return uniqueItems.length === value.length;\n          });\n        }\n\n        // resolve items schema needed for isEnum check\n        if (schema.items && !Array.isArray(schema.items)) {\n          schema.items = this.resolveSchema(<JSONSchema7> schema.items, options);\n        }\n\n        // TODO: remove isEnum check once adding an option to skip extension\n        if (!this.isEnum(schema)) {\n          const _this = this;\n          Object.defineProperty(field, 'fieldArray', {\n            get: function() {\n              if (!Array.isArray(schema.items)) {\n                // When items is a single schema, the additionalItems keyword is meaningless, and it should not be used.\n                return _this._toFieldConfig(<JSONSchema7> schema.items, options);\n              }\n\n              const length = this.fieldGroup ? this.fieldGroup.length : 0;\n              const itemSchema = schema.items[length]\n                ? schema.items[length]\n                : schema.additionalItems;\n\n              return itemSchema\n                ? _this._toFieldConfig(<JSONSchema7> itemSchema, options)\n                : {};\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n\n        break;\n      }\n    }\n\n    if (schema.hasOwnProperty('const')) {\n      field.templateOptions.const = schema.const;\n      this.addValidator(field, 'const', ({ value }) => value === schema.const);\n      if (!field.type) {\n        field.defaultValue = schema.const;\n      }\n    }\n\n    if (this.isEnum(schema)) {\n      field.templateOptions.multiple = field.type === 'array';\n      field.type = 'enum';\n      field.templateOptions.options = this.toEnumOptions(schema);\n    }\n\n    // map in possible formlyConfig options from the widget property\n    if (schema['widget'] && schema['widget'].formlyConfig) {\n      field = reverseDeepMerge(schema['widget'].formlyConfig, field);\n    }\n\n    // if there is a map function passed in, use it to allow the user to\n    // further customize how fields are being mapped\n    return options.map ? options.map(field, schema) : field;\n  }\n\n  private resolveSchema(schema: JSONSchema7, options: IOptions) {\n    if (schema.$ref) {\n      schema = this.resolveDefinition(schema, options);\n    }\n\n    if (schema.allOf) {\n      schema = this.resolveAllOf(schema, options);\n    }\n\n    return schema;\n  }\n\n  private resolveAllOf({ allOf, ...baseSchema }: JSONSchema7, options: IOptions) {\n    if (!allOf.length) {\n      throw Error(`allOf array can not be empty ${allOf}.`);\n    }\n\n    return allOf.reduce((base: JSONSchema7, schema: JSONSchema7) => {\n      schema = this.resolveSchema(schema, options);\n      if (base.required && schema.required) {\n        base.required = [...base.required, ...schema.required];\n      }\n\n      if (schema.uniqueItems) {\n        base.uniqueItems = schema.uniqueItems;\n      }\n\n      // resolve to min value\n      ['maxLength', 'maximum', 'exclusiveMaximum', 'maxItems', 'maxProperties']\n        .forEach(prop => {\n          if (!isEmpty(base[prop]) && !isEmpty(schema[prop])) {\n            base[prop] = base[prop] < schema[prop] ? base[prop] : schema[prop];\n          }\n        });\n\n      // resolve to max value\n      ['minLength', 'minimum', 'exclusiveMinimum', 'minItems', 'minProperties']\n        .forEach(prop => {\n          if (!isEmpty(base[prop]) && !isEmpty(schema[prop])) {\n            base[prop] = base[prop] > schema[prop] ? base[prop] : schema[prop];\n          }\n        });\n\n      return reverseDeepMerge(base, schema);\n    }, baseSchema);\n  }\n\n  private resolveMultiSchema(\n    mode: 'oneOf' | 'anyOf',\n    schemas: JSONSchema7[],\n    options: IOptions,\n  ): FormlyFieldConfig {\n    let subscription: Subscription = null;\n\n    return {\n      type: 'multischema',\n      fieldGroup: [\n        {\n          type: 'enum',\n          templateOptions: {\n            multiple: mode === 'anyOf',\n            options: schemas\n              .map((s, i) => ({ label: s.title, value: i })),\n          },\n          hooks: {\n            onInit(f) {\n              const modeField = f.parent.fieldGroup[1];\n              const value = modeField.fieldGroup\n                .map((f, i) => isFieldValid(f) ? i : -1)\n                .filter(v => v !== -1)\n              ;\n\n              const normalizedValue = [value.length === 0 ? 0 : value[0]];\n              const formattedValue = mode === 'anyOf' ? normalizedValue : normalizedValue[0];\n              f.formControl = new FormControl(formattedValue);\n              setTimeout(() => checkField(modeField));\n\n              subscription = f.formControl.valueChanges.pipe(\n                startWith(formattedValue),\n                pairwise(),\n              ).subscribe(([p, q]) => {\n                if (Array.isArray(p)) {\n                  if (p.length >= q.length) {\n                    const indexToClear = p.find(v => !q.includes(v));\n                    clearFieldModel(modeField.fieldGroup[indexToClear]);\n                  }\n                } else {\n                  clearFieldModel(modeField);\n                }\n                checkField(modeField);\n              });\n            },\n            onDestroy() {\n              subscription && subscription.unsubscribe();\n            },\n          },\n        },\n        {\n          fieldGroup: schemas.map((s, i) => ({\n            ...this._toFieldConfig(s, options),\n            hideExpression: (m, fs, f) => {\n              const control = f.parent.parent.fieldGroup[0].formControl;\n              return !control || (Array.isArray(control.value)\n                  ? !control.value.includes(i)\n                  : control.value !== i);\n            },\n          })),\n        },\n      ],\n    };\n  }\n\n  private resolveDefinition(schema: JSONSchema7, options: IOptions): JSONSchema7 {\n    const [uri, pointer] = schema.$ref.split('#/');\n    if (uri) {\n      throw Error(`Remote schemas for ${schema.$ref} not supported yet.`);\n    }\n\n    const definition = !pointer ? null : pointer.split('/').reduce(\n      (def, path) => def && def.hasOwnProperty(path) ? def[path] : null,\n      options.schema,\n    );\n\n    if (!definition) {\n      throw Error(`Cannot find a definition for ${schema.$ref}.`);\n    }\n\n    if (definition.$ref) {\n      return this.resolveDefinition(definition, options);\n    }\n\n    return {\n      ...definition,\n      ...['title', 'description', 'default'].reduce((annotation, p) => {\n        if (schema.hasOwnProperty(p)) {\n          annotation[p] = schema[p];\n        }\n\n        return annotation;\n      }, {}),\n    };\n  }\n\n  private resolveDependencies(schema: JSONSchema7) {\n    const deps = {};\n    const schemaDeps = {};\n\n    Object.keys(schema.dependencies || {}).forEach(prop => {\n      const dependency = schema.dependencies[prop] as JSONSchema7;\n      if (Array.isArray(dependency)) {\n        // Property dependencies\n        dependency.forEach(dep => {\n          if (!deps[dep]) {\n            deps[dep] = [prop];\n          } else {\n            deps[dep].push(prop);\n          }\n        });\n      } else {\n        // schema dependencies\n        schemaDeps[prop] = dependency;\n      }\n    });\n\n    return [deps, schemaDeps];\n  }\n\n  private guessType(schema: JSONSchema7) {\n    const type = schema.type as JSONSchema7TypeName;\n    if (!type && schema.properties) {\n      return 'object';\n    }\n\n    if (Array.isArray(type)) {\n      if (type.length === 1) {\n        return type[0];\n      }\n\n      if (type.length === 2 && type.indexOf('null') !== -1) {\n        return type[type[0] === 'null' ? 1 : 0];\n      }\n    }\n\n    return type;\n  }\n\n  private addValidator(field: FormlyFieldConfig, name: string, validator: (control: AbstractControl) => boolean) {\n    field.validators = field.validators || {};\n    field.validators[name] = validator;\n  }\n\n  private isEnum(schema: JSONSchema7) {\n    return schema.enum\n      || (schema.anyOf && schema.anyOf.every(isConst))\n      || (schema.oneOf && schema.oneOf.every(isConst))\n      || schema.uniqueItems && schema.items && !Array.isArray(schema.items) && this.isEnum(<JSONSchema7> schema.items);\n  }\n\n  private toEnumOptions(schema: JSONSchema7) {\n    if (schema.enum) {\n      return schema.enum.map(value => ({ value, label: value }));\n    }\n\n    const toEnum = (s: JSONSchema7) => {\n      const value = s.hasOwnProperty('const') ? s.const : s.enum[0];\n\n      return { value: value, label: s.title || value };\n    };\n\n    if (schema.anyOf) {\n      return schema.anyOf.map(toEnum);\n    }\n\n    if (schema.oneOf) {\n      return schema.oneOf.map(toEnum);\n    }\n\n    return this.toEnumOptions(<JSONSchema7> schema.items);\n  }\n}\n"]}