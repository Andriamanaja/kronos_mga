!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("primeng/inputtext"),require("primeng/inputtextarea"),require("primeng/checkbox"),require("primeng/radiobutton"),require("primeng/dropdown"),require("@ngx-formly/core"),require("@ngx-formly/core/select")):"function"==typeof define&&define.amd?define("@ngx-formly/primeng",["exports","@angular/core","@angular/common","@angular/forms","primeng/inputtext","primeng/inputtextarea","primeng/checkbox","primeng/radiobutton","primeng/dropdown","@ngx-formly/core","@ngx-formly/core/select"],o):o((e["ngx-formly"]=e["ngx-formly"]||{},e["ngx-formly"].primeng={}),e.ng.core,e.ng.common,e.ng.forms,e.inputtext,e.inputtextarea,e.checkbox,e.radiobutton,e.dropdown,e.core$1,e.select)}(this,function(e,r,o,n,t,l,i,p,a,m,s){"use strict";var u=function(e,o){return(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,o){e.__proto__=o}||function(e,o){for(var r in o)o.hasOwnProperty(r)&&(e[r]=o[r])})(e,o)};function f(e,o){function r(){this.constructor=e}u(e,o),e.prototype=null===o?Object.create(o):(r.prototype=o.prototype,new r)}var d=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return f(o,e),o.decorators=[{type:r.Component,args:[{selector:"formly-field-primeng-input",template:'\n    <input *ngIf="to.type !== \'number\' else numberTmp" pInputText [type]="to.type || \'text\'" [formControl]="formControl" [formlyAttributes]="field" [class.ng-dirty]="showError">\n    <ng-template #numberTmp>\n      <input type="number" pInputText [formControl]="formControl" [formlyAttributes]="field" [class.ng-dirty]="showError">\n    </ng-template>\n  '}]}],o}(m.FieldType),c=function(o){function e(){var e=null!==o&&o.apply(this,arguments)||this;return e.defaultOptions={templateOptions:{hideLabel:!0}},e}return f(e,o),e.decorators=[{type:r.Component,args:[{selector:"formly-field-primeng-checkbox",template:'\n    <p-checkbox\n      [class.ng-dirty]="showError"\n      binary="true"\n      [label]="to.label"\n      [formControl]="formControl"\n      [formlyAttributes]="field"\n      (onChange)="to.change && to.change(field, $event)">\n    </p-checkbox>\n  '}]}],e}(m.FieldType),y=function(o){function e(){var e=null!==o&&o.apply(this,arguments)||this;return e.defaultOptions={templateOptions:{options:[]}},e}return f(e,o),e.decorators=[{type:r.Component,args:[{selector:"formly-field-primeng-radio",template:'\n    <p-radioButton *ngFor="let option of to.options | formlySelectOptions:field | async"\n      [class.ng-dirty]="showError"\n      [name]="field.name || id"\n      [formControl]="formControl"\n      [label]="option.label"\n      [value]="option.value">\n    </p-radioButton>\n  '}]}],e}(m.FieldType),g=function(o){function e(){var e=null!==o&&o.apply(this,arguments)||this;return e.defaultOptions={templateOptions:{options:[]}},e}return f(e,o),e.decorators=[{type:r.Component,args:[{selector:"formly-field-primeng-select",template:'\n    <p-dropdown\n      [class.ng-dirty]="showError"\n      [placeholder]="to.placeholder"\n      [options]="to.options | formlySelectOptions:field | async"\n      [formControl]="formControl"\n      [formlyAttributes]="field"\n      [showClear]="!to.required"\n      (onChange)="to.change && to.change(field, $event)">\n    </p-dropdown>\n  '}]}],e}(m.FieldType),h=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return f(o,e),o.decorators=[{type:r.Component,args:[{selector:"formly-field-primeng-textarea",template:'\n    <textarea\n      [class.ng-dirty]="showError"\n      [formControl]="formControl"\n      [formlyAttributes]="field" pInputTextarea></textarea>\n  '}]}],o}(m.FieldType),x=function(e){function o(){return null!==e&&e.apply(this,arguments)||this}return f(o,e),o.decorators=[{type:r.Component,args:[{selector:"formly-wrapper-primeng-form-field",template:'\n    <div *ngIf="to.label && to.hideLabel !== true" class="ui-widget">\n      <label [for]="id">\n        {{ to.label }}\n        <span *ngIf="to.required && to.hideRequiredMarker !== true">*</span>\n      </label>\n    </div>\n    <ng-container #fieldComponent></ng-container>\n\n    <div class="ui-message ui-messages-error" *ngIf="showError">\n        <formly-validation-message [field]="field"></formly-validation-message>\n    </div>\n  ',styles:["\n    .ui-messages-error {\n      margin: 0;\n      margin-top: 4px;\n    }\n  "]}]}],o}(m.FieldWrapper),b=[d,h,c,y,g,x],C={types:[{name:"input",component:d,wrappers:["form-field"]},{name:"checkbox",component:c,wrappers:["form-field"]},{name:"textarea",component:h,wrappers:["form-field"]},{name:"radio",component:y,wrappers:["form-field"]},{name:"select",component:g,wrappers:["form-field"]}],wrappers:[{name:"form-field",component:x}]},w=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{declarations:b,imports:[o.CommonModule,t.InputTextModule,l.InputTextareaModule,i.CheckboxModule,p.RadioButtonModule,a.DropdownModule,n.ReactiveFormsModule,s.FormlySelectModule,m.FormlyModule.forChild(C)]}]}],e}();e.FormlyPrimeNGModule=w,e.FormlyFieldInput=d,e.FormlyFieldCheckbox=c,e.FormlyFieldRadio=y,e.FormlyFieldSelect=g,e.FormlyFieldTextArea=h,e.FormlyWrapperFormField=x,e.ɵa=b,e.ɵb=C,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-formly-primeng.umd.min.js.map