!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("@ngx-formly/core"),require("@angular/forms"),require("primeng/inputtext"),require("@ngx-formly/primeng/form-field")):"function"==typeof define&&define.amd?define("@ngx-formly/primeng/input",["exports","@angular/core","@angular/common","@ngx-formly/core","@angular/forms","primeng/inputtext","@ngx-formly/primeng/form-field"],e):e(((n=n||self)["ngx-formly"]=n["ngx-formly"]||{},n["ngx-formly"].primeng=n["ngx-formly"].primeng||{},n["ngx-formly"].primeng.input={}),n.ng.core,n.ng.common,n.core$1,n.ng.forms,n.inputtext,n["ngx-formly"].primeng["form-field"])}(this,(function(n,e,r,o,t,i,m){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var l=function(n,e){return(l=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var r in e)e.hasOwnProperty(r)&&(n[r]=e[r])})(n,e)};var p=function(n){function r(){return null!==n&&n.apply(this,arguments)||this}return function(n,e){function r(){this.constructor=n}l(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}(r,n),r.decorators=[{type:e.Component,args:[{selector:"formly-field-primeng-input",template:'\n    <input\n      *ngIf="to.type !== \'number\'; else numberTmp"\n      pInputText\n      [type]="to.type || \'text\'"\n      [formControl]="formControl"\n      [formlyAttributes]="field"\n      [class.ng-dirty]="showError"\n    />\n    <ng-template #numberTmp>\n      <input\n        type="number"\n        pInputText\n        [formControl]="formControl"\n        [formlyAttributes]="field"\n        [class.ng-dirty]="showError"\n      />\n    </ng-template>\n  '}]}],r}(o.FieldType),u=function(){function n(){}return n.decorators=[{type:e.NgModule,args:[{declarations:[p],imports:[r.CommonModule,t.ReactiveFormsModule,i.InputTextModule,m.FormlyFormFieldModule,o.FormlyModule.forChild({types:[{name:"input",component:p,wrappers:["form-field"]}]})]}]}],n}();n.FormlyFieldInput=p,n.FormlyInputModule=u,Object.defineProperty(n,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-formly-primeng-input.umd.min.js.map