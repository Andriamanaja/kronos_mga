/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
var FormlyFieldSelect = /** @class */ (function (_super) {
    tslib_1.__extends(FormlyFieldSelect, _super);
    function FormlyFieldSelect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.defaultOptions = {
            templateOptions: { options: [] },
        };
        return _this;
    }
    FormlyFieldSelect.decorators = [
        { type: Component, args: [{
                    selector: 'formly-field-ion-select',
                    template: "\n    <ion-select\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\"\n      [multiple]=\"to.multiple\"\n      [interface]=\"to.interface\"\n    >\n      <ion-select-option *ngFor=\"let option of to.options | formlySelectOptions: field | async\" [value]=\"option.value\">\n        {{ option.label }}\n      </ion-select-option>\n    </ion-select>\n  ",
                    styles: [':host { display: inherit; }']
                }] }
    ];
    return FormlyFieldSelect;
}(FieldType));
export { FormlyFieldSelect };
if (false) {
    /** @type {?} */
    FormlyFieldSelect.prototype.defaultOptions;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LnR5cGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LWZvcm1seS9pb25pYy9zZWxlY3QvIiwic291cmNlcyI6WyJzZWxlY3QudHlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBRTdDO0lBZ0J1Qyw2Q0FBUztJQWhCaEQ7UUFBQSxxRUFvQkM7UUFIQyxvQkFBYyxHQUFHO1lBQ2YsZUFBZSxFQUFFLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRTtTQUNqQyxDQUFDOztJQUNKLENBQUM7O2dCQXBCQSxTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHlCQUF5QjtvQkFDbkMsUUFBUSxFQUFFLHdYQVdUOzZCQUNRLDZCQUE2QjtpQkFDdkM7O0lBS0Qsd0JBQUM7Q0FBQSxBQXBCRCxDQWdCdUMsU0FBUyxHQUkvQztTQUpZLGlCQUFpQjs7O0lBQzVCLDJDQUVFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGaWVsZFR5cGUgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZm9ybWx5LWZpZWxkLWlvbi1zZWxlY3QnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxpb24tc2VsZWN0XG4gICAgICBbZm9ybUNvbnRyb2xdPVwiZm9ybUNvbnRyb2xcIlxuICAgICAgW2lvbkZvcm1seUF0dHJpYnV0ZXNdPVwiZmllbGRcIlxuICAgICAgW211bHRpcGxlXT1cInRvLm11bHRpcGxlXCJcbiAgICAgIFtpbnRlcmZhY2VdPVwidG8uaW50ZXJmYWNlXCJcbiAgICA+XG4gICAgICA8aW9uLXNlbGVjdC1vcHRpb24gKm5nRm9yPVwibGV0IG9wdGlvbiBvZiB0by5vcHRpb25zIHwgZm9ybWx5U2VsZWN0T3B0aW9uczogZmllbGQgfCBhc3luY1wiIFt2YWx1ZV09XCJvcHRpb24udmFsdWVcIj5cbiAgICAgICAge3sgb3B0aW9uLmxhYmVsIH19XG4gICAgICA8L2lvbi1zZWxlY3Qtb3B0aW9uPlxuICAgIDwvaW9uLXNlbGVjdD5cbiAgYCxcbiAgc3R5bGVzOiBbJzpob3N0IHsgZGlzcGxheTogaW5oZXJpdDsgfSddLFxufSlcbmV4cG9ydCBjbGFzcyBGb3JtbHlGaWVsZFNlbGVjdCBleHRlbmRzIEZpZWxkVHlwZSB7XG4gIGRlZmF1bHRPcHRpb25zID0ge1xuICAgIHRlbXBsYXRlT3B0aW9uczogeyBvcHRpb25zOiBbXSB9LFxuICB9O1xufVxuIl19