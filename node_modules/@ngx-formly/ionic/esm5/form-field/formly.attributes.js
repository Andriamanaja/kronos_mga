/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive, Input } from '@angular/core';
import { FormlyAttributes } from '@ngx-formly/core';
var IonFormlyAttributes = /** @class */ (function (_super) {
    tslib_1.__extends(IonFormlyAttributes, _super);
    function IonFormlyAttributes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @param {?} element
     * @param {?} value
     * @return {?}
     */
    IonFormlyAttributes.prototype.focusElement = /**
     * @param {?} element
     * @param {?} value
     * @return {?}
     */
    function (element, value) {
        if (!element.setFocus || !value) {
            return;
        }
        if (!element.getInputElement()) {
            setTimeout((/**
             * @return {?}
             */
            function () { return element.setFocus(); }), 300);
        }
        else {
            element.setFocus();
        }
    };
    IonFormlyAttributes.decorators = [
        { type: Directive, args: [{
                    // tslint:disable-next-line
                    selector: '[ionFormlyAttributes]',
                    host: {
                        '(keyup)': 'to.keyup && to.keyup(field, $event)',
                        '(keydown)': 'to.keydown && to.keydown(field, $event)',
                        '(click)': 'to.click && to.click(field, $event)',
                        '(keypress)': 'to.keypress && to.keypress(field, $event)',
                        '(ionChange)': 'to.change && to.change(field, $event)',
                        '(ionFocus)': 'onFocus($event)',
                        '(ionBlur)': 'onBlur($event)',
                    },
                },] }
    ];
    IonFormlyAttributes.propDecorators = {
        field: [{ type: Input, args: ['ionFormlyAttributes',] }]
    };
    return IonFormlyAttributes;
}(FormlyAttributes));
export { IonFormlyAttributes };
if (false) {
    /** @type {?} */
    IonFormlyAttributes.prototype.field;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWx5LmF0dHJpYnV0ZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4LWZvcm1seS9pb25pYy9mb3JtLWZpZWxkLyIsInNvdXJjZXMiOlsiZm9ybWx5LmF0dHJpYnV0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQXFCLE1BQU0sa0JBQWtCLENBQUM7QUFFdkU7SUFjeUMsK0NBQWdCO0lBZHpEOztJQTRCQSxDQUFDOzs7Ozs7SUFYQywwQ0FBWTs7Ozs7SUFBWixVQUFhLE9BQU8sRUFBRSxLQUFjO1FBQ2xDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQy9CLE9BQU87U0FDUjtRQUVELElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxFQUFFLEVBQUU7WUFDOUIsVUFBVTs7O1lBQUMsY0FBTSxPQUFBLE9BQU8sQ0FBQyxRQUFRLEVBQUUsRUFBbEIsQ0FBa0IsR0FBRSxHQUFHLENBQUMsQ0FBQztTQUMzQzthQUFNO1lBQ0wsT0FBTyxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ3BCO0lBQ0gsQ0FBQzs7Z0JBM0JGLFNBQVMsU0FBQzs7b0JBRVQsUUFBUSxFQUFFLHVCQUF1QjtvQkFDakMsSUFBSSxFQUFFO3dCQUNKLFNBQVMsRUFBRSxxQ0FBcUM7d0JBQ2hELFdBQVcsRUFBRSx5Q0FBeUM7d0JBQ3RELFNBQVMsRUFBRSxxQ0FBcUM7d0JBQ2hELFlBQVksRUFBRSwyQ0FBMkM7d0JBRXpELGFBQWEsRUFBRSx1Q0FBdUM7d0JBQ3RELFlBQVksRUFBRSxpQkFBaUI7d0JBQy9CLFdBQVcsRUFBRSxnQkFBZ0I7cUJBQzlCO2lCQUNGOzs7d0JBRUUsS0FBSyxTQUFDLHFCQUFxQjs7SUFhOUIsMEJBQUM7Q0FBQSxBQTVCRCxDQWN5QyxnQkFBZ0IsR0FjeEQ7U0FkWSxtQkFBbUI7OztJQUM5QixvQ0FBdUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtbHlBdHRyaWJ1dGVzLCBGb3JtbHlGaWVsZENvbmZpZyB9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lXG4gIHNlbGVjdG9yOiAnW2lvbkZvcm1seUF0dHJpYnV0ZXNdJyxcbiAgaG9zdDoge1xuICAgICcoa2V5dXApJzogJ3RvLmtleXVwICYmIHRvLmtleXVwKGZpZWxkLCAkZXZlbnQpJyxcbiAgICAnKGtleWRvd24pJzogJ3RvLmtleWRvd24gJiYgdG8ua2V5ZG93bihmaWVsZCwgJGV2ZW50KScsXG4gICAgJyhjbGljayknOiAndG8uY2xpY2sgJiYgdG8uY2xpY2soZmllbGQsICRldmVudCknLFxuICAgICcoa2V5cHJlc3MpJzogJ3RvLmtleXByZXNzICYmIHRvLmtleXByZXNzKGZpZWxkLCAkZXZlbnQpJyxcblxuICAgICcoaW9uQ2hhbmdlKSc6ICd0by5jaGFuZ2UgJiYgdG8uY2hhbmdlKGZpZWxkLCAkZXZlbnQpJyxcbiAgICAnKGlvbkZvY3VzKSc6ICdvbkZvY3VzKCRldmVudCknLFxuICAgICcoaW9uQmx1ciknOiAnb25CbHVyKCRldmVudCknLFxuICB9LFxufSlcbmV4cG9ydCBjbGFzcyBJb25Gb3JtbHlBdHRyaWJ1dGVzIGV4dGVuZHMgRm9ybWx5QXR0cmlidXRlcyB7XG4gIEBJbnB1dCgnaW9uRm9ybWx5QXR0cmlidXRlcycpIGZpZWxkOiBGb3JtbHlGaWVsZENvbmZpZztcblxuICBmb2N1c0VsZW1lbnQoZWxlbWVudCwgdmFsdWU6IGJvb2xlYW4pIHtcbiAgICBpZiAoIWVsZW1lbnQuc2V0Rm9jdXMgfHwgIXZhbHVlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCFlbGVtZW50LmdldElucHV0RWxlbWVudCgpKSB7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IGVsZW1lbnQuc2V0Rm9jdXMoKSwgMzAwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZWxlbWVudC5zZXRGb2N1cygpO1xuICAgIH1cbiAgfVxufVxuIl19