{"version":3,"file":"ngx-formly-ionic.js.map","sources":["ng://@ngx-formly/ionic/lib/types/input.ts","ng://@ngx-formly/ionic/lib/types/checkbox.ts","ng://@ngx-formly/ionic/lib/types/datetime.ts","ng://@ngx-formly/ionic/lib/types/radio.ts","ng://@ngx-formly/ionic/lib/types/toggle.ts","ng://@ngx-formly/ionic/lib/types/select.ts","ng://@ngx-formly/ionic/lib/types/range.ts","ng://@ngx-formly/ionic/lib/types/textarea.ts","ng://@ngx-formly/ionic/lib/wrappers/form-field.ts","ng://@ngx-formly/ionic/lib/ui-ionic.config.ts","ng://@ngx-formly/ionic/lib/formly.attributes.ts","ng://@ngx-formly/ionic/lib/ui-ionic.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-input',\n  template: `\n    <ion-input *ngIf=\"to.type !== 'number' else numberTmp\" [type]=\"to.type || 'text'\" [formControl]=\"formControl\" [ionFormlyAttributes]=\"field\"></ion-input>\n    <ng-template #numberTmp>\n      <ion-input type=\"number\" [formControl]=\"formControl\" [ionFormlyAttributes]=\"field\"></ion-input>\n    </ng-template>\n  `,\n  styles: [':host { display: inherit; }'],\n})\nexport class FormlyFieldInput extends FieldType {}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-checkbox',\n  template: `\n    <ion-checkbox\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\">\n    </ion-checkbox>\n  `,\n})\nexport class FormlyFieldCheckbox extends FieldType {\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-datetime',\n  template: `\n    <ion-datetime\n      [displayFormat]=\"to.displayFormat\"\n      [pickerFormat]=\"to.pickerFormat\"\n      [min]=\"to.min\"\n      [max]=\"to.max\"\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\">\n    </ion-datetime>\n  `,\n})\nexport class FormlyFieldDatetime extends FieldType {\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-radio',\n  template: `\n    <ion-list>\n      <ion-radio-group\n        [formControl]=\"formControl\"\n        [ionFormlyAttributes]=\"field\">\n        <ion-list-header>{{ to.label }}</ion-list-header>\n        <ion-item *ngFor=\"let option of to.options | formlySelectOptions:field | async\">\n          <ion-label>{{ option.label }}</ion-label>\n          <ion-radio [value]=\"option.value\"></ion-radio>\n        </ion-item>\n      </ion-radio-group>\n    </ion-list>\n    <ion-item lines=\"none\" *ngIf=\"showError\">\n      <ion-label>\n        <ion-text color=\"danger\">\n          <p>\n            <formly-validation-message [field]=\"field\"></formly-validation-message>\n          </p>\n        </ion-text>\n      </ion-label>\n    </ion-item>\n  `,\n})\nexport class FormlyFieldRadio extends FieldType {\n  defaultOptions = {\n    templateOptions: { options: [] },\n  };\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-toggle',\n  template: `\n    <ion-toggle\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\">\n    </ion-toggle>\n  `,\n})\nexport class FormlyFieldToggle extends FieldType {}\n\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-select',\n  template: `\n    <ion-select\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\"\n      [multiple]=\"to.multiple\"\n      [interface]=\"to.interface\">\n      <ion-select-option *ngFor=\"let option of to.options | formlySelectOptions:field | async\" [value]=\"option.value\">\n        {{ option.label }}\n      </ion-select-option>\n    </ion-select>\n  `,\n  styles: [':host { display: inherit; }'],\n})\nexport class FormlyFieldSelect extends FieldType {\n  defaultOptions = {\n    templateOptions: { options: [] },\n  };\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-range',\n  template: `\n    <ion-range\n      [min]=\"to.min\"\n      [max]=\"to.max\"\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\">\n      <ion-label slot=\"start\">{{ to.min }}</ion-label>\n      <ion-label slot=\"end\">{{ to.max }}</ion-label>\n    </ion-range>\n  `,\n  styles: [':host { display: inherit; }'],\n})\nexport class FormlyFieldRange extends FieldType {}\n","import { Component } from '@angular/core';\nimport { FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-field-ion-textarea',\n  template: `\n    <ion-textarea\n      [formControl]=\"formControl\"\n      [ionFormlyAttributes]=\"field\"\n      [cols]=\"to.cols\"\n      [rows]=\"to.rows\">\n    </ion-textarea>\n  `,\n  styles: [':host { display: inherit; }'],\n})\nexport class FormlyFieldTextArea extends FieldType {}\n","import { Component } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-ion-form-field',\n  template: `\n    <ion-item [lines]=\"to.itemLines\">\n      <ion-label [position]=\"to.labelPosition\">\n        {{ to.label }}\n        <span *ngIf=\"to.required && to.hideRequiredMarker !== true\">*</span>\n      </ion-label>\n      <ng-template #fieldComponent></ng-template>\n    </ion-item>\n    <ion-item lines=\"none\" *ngIf=\"showError\">\n      <ion-label>\n        <ion-text color=\"danger\">\n          <p>\n            <formly-validation-message [field]=\"field\"></formly-validation-message>\n          </p>\n        </ion-text>\n      </ion-label>\n    </ion-item>\n  `,\n})\nexport class FormlyWrapperFormField extends FieldWrapper {}\n","import { ConfigOption } from '@ngx-formly/core';\nimport {\n  FormlyFieldInput,\n  FormlyFieldCheckbox,\n  FormlyFieldDatetime,\n  FormlyFieldRadio,\n  FormlyFieldToggle,\n  FormlyFieldSelect,\n  FormlyFieldRange,\n  FormlyFieldTextArea,\n} from './types/types';\nimport { FormlyWrapperFormField } from './wrappers/wrappers';\n\n\nexport const FIELD_TYPE_COMPONENTS = [\n  // types\n  FormlyFieldInput,\n  FormlyFieldCheckbox,\n  FormlyFieldDatetime,\n  FormlyFieldRadio,\n  FormlyFieldToggle,\n  FormlyFieldSelect,\n  FormlyFieldRange,\n  FormlyFieldTextArea,\n\n  // wrappers\n  FormlyWrapperFormField,\n];\n\nexport const IONIC_FORMLY_CONFIG: ConfigOption = {\n  types: [\n    {\n      name: 'input',\n      component: FormlyFieldInput,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'checkbox',\n      component: FormlyFieldCheckbox,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'datetime',\n      component: FormlyFieldDatetime,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'radio',\n      component: FormlyFieldRadio,\n      wrappers: [],\n    },\n    {\n      name: 'toggle',\n      component: FormlyFieldToggle,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'select',\n      component: FormlyFieldSelect,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'range',\n      component: FormlyFieldRange,\n      wrappers: ['form-field'],\n    },\n    {\n      name: 'textarea',\n      component: FormlyFieldTextArea,\n      wrappers: ['form-field'],\n    },\n  ],\n  wrappers: [\n    { name: 'form-field', component: FormlyWrapperFormField },\n  ],\n};\n","import { Directive, Input } from '@angular/core';\nimport { FormlyAttributes, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Directive({\n  // tslint:disable-next-line\n  selector: '[ionFormlyAttributes]',\n  host: {\n    '(keyup)': 'to.keyup && to.keyup(field, $event)',\n    '(keydown)': 'to.keydown && to.keydown(field, $event)',\n    '(click)': 'to.click && to.click(field, $event)',\n    '(keypress)': 'to.keypress && to.keypress(field, $event)',\n\n    '(ionChange)': 'to.change && to.change(field, $event)',\n    '(ionFocus)': 'onFocus($event)',\n    '(ionBlur)': 'onBlur($event)',\n  },\n})\nexport class IonFormlyAttributes extends FormlyAttributes {\n  @Input('ionFormlyAttributes') field: FormlyFieldConfig;\n\n  focusElement(element, value: boolean) {\n    if (!element.setFocus || !value) {\n      return;\n    }\n\n    if (!element.getInputElement()) {\n      setTimeout(() => element.setFocus(), 300);\n    } else {\n      element.setFocus();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { IONIC_FORMLY_CONFIG, FIELD_TYPE_COMPONENTS } from './ui-ionic.config';\nimport { IonFormlyAttributes } from './formly.attributes';\n\n@NgModule({\n  declarations: [FIELD_TYPE_COMPONENTS, IonFormlyAttributes],\n  imports: [\n    CommonModule,\n    IonicModule,\n    ReactiveFormsModule,\n    FormlySelectModule,\n    FormlyModule.forChild(IONIC_FORMLY_CONFIG),\n  ],\n  exports: [IonFormlyAttributes],\n})\nexport class FormlyIonicModule {\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}
