{"version":3,"file":"ngx-formly-ionic-form-field.js","sources":["ng://@ngx-formly/ionic/form-field/form-field.wrapper.ts","ng://@ngx-formly/ionic/form-field/formly.attributes.ts","ng://@ngx-formly/ionic/form-field/form-field.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-ion-form-field',\n  template: `\n    <ion-item [lines]=\"to.itemLines\">\n      <ion-label [position]=\"to.labelPosition\">\n        {{ to.label }}\n        <span *ngIf=\"to.required && to.hideRequiredMarker !== true\">*</span>\n      </ion-label>\n      <ng-template #fieldComponent></ng-template>\n    </ion-item>\n    <ion-item lines=\"none\" *ngIf=\"showError\">\n      <ion-label>\n        <ion-text color=\"danger\">\n          <p>\n            <formly-validation-message [field]=\"field\"></formly-validation-message>\n          </p>\n        </ion-text>\n      </ion-label>\n    </ion-item>\n  `,\n})\nexport class FormlyWrapperFormField extends FieldWrapper {}\n","import { Directive, Input } from '@angular/core';\nimport { FormlyAttributes, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Directive({\n  // tslint:disable-next-line\n  selector: '[ionFormlyAttributes]',\n  host: {\n    '(keyup)': 'to.keyup && to.keyup(field, $event)',\n    '(keydown)': 'to.keydown && to.keydown(field, $event)',\n    '(click)': 'to.click && to.click(field, $event)',\n    '(keypress)': 'to.keypress && to.keypress(field, $event)',\n\n    '(ionChange)': 'to.change && to.change(field, $event)',\n    '(ionFocus)': 'onFocus($event)',\n    '(ionBlur)': 'onBlur($event)',\n  },\n})\nexport class IonFormlyAttributes extends FormlyAttributes {\n  @Input('ionFormlyAttributes') field: FormlyFieldConfig;\n\n  focusElement(element, value: boolean) {\n    if (!element.setFocus || !value) {\n      return;\n    }\n\n    if (!element.getInputElement()) {\n      setTimeout(() => element.setFocus(), 300);\n    } else {\n      element.setFocus();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormlyWrapperFormField } from './form-field.wrapper';\nimport { IonFormlyAttributes } from './formly.attributes';\n\n@NgModule({\n  declarations: [FormlyWrapperFormField, IonFormlyAttributes],\n  exports: [IonFormlyAttributes],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n\n    FormlyModule.forChild({\n      wrappers: [\n        {\n          name: 'form-field',\n          component: FormlyWrapperFormField,\n        },\n      ],\n    }),\n  ],\n})\nexport class FormlyFormFieldModule {}\n"],"names":["tslib_1.__extends"],"mappings":";;;;;;;;;;;;IAwB4CA,0CAAY;IArBxD;;KAqB2D;;gBArB1D,SAAS,SAAC;oBACT,QAAQ,EAAE,+BAA+B;oBACzC,QAAQ,EAAE,6jBAiBT;iBACF;;IACyD,6BAAC;CAAA,CAAf,YAAY;;;;;;;ICPfA,uCAAgB;IAdzD;;KA4BC;;;;;;IAXC,0CAAY;;;;;IAAZ,UAAa,OAAO,EAAE,KAAc;QAClC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,KAAK,EAAE;YAC/B,OAAO;SACR;QAED,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE;YAC9B,UAAU;;;YAAC,cAAM,OAAA,OAAO,CAAC,QAAQ,EAAE,GAAA,GAAE,GAAG,CAAC,CAAC;SAC3C;aAAM;YACL,OAAO,CAAC,QAAQ,EAAE,CAAC;SACpB;KACF;;gBA3BF,SAAS,SAAC;;oBAET,QAAQ,EAAE,uBAAuB;oBACjC,IAAI,EAAE;wBACJ,SAAS,EAAE,qCAAqC;wBAChD,WAAW,EAAE,yCAAyC;wBACtD,SAAS,EAAE,qCAAqC;wBAChD,YAAY,EAAE,2CAA2C;wBAEzD,aAAa,EAAE,uCAAuC;wBACtD,YAAY,EAAE,iBAAiB;wBAC/B,WAAW,EAAE,gBAAgB;qBAC9B;iBACF;;;wBAEE,KAAK,SAAC,qBAAqB;;IAa9B,0BAAC;CAAA,CAdwC,gBAAgB,GAcxD;;;IAbC,oCAAuD;;;;;;;AClBzD;IAQA;KAkBqC;;gBAlBpC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,sBAAsB,EAAE,mBAAmB,CAAC;oBAC3D,OAAO,EAAE,CAAC,mBAAmB,CAAC;oBAC9B,OAAO,EAAE;wBACP,YAAY;wBACZ,mBAAmB;wBACnB,WAAW;wBAEX,YAAY,CAAC,QAAQ,CAAC;4BACpB,QAAQ,EAAE;gCACR;oCACE,IAAI,EAAE,YAAY;oCAClB,SAAS,EAAE,sBAAsB;iCAClC;6BACF;yBACF,CAAC;qBACH;iBACF;;IACmC,4BAAC;CAlBrC;;;;;;;;;;;;;;"}