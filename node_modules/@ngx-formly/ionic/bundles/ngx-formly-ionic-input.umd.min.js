!function(o,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/common"),require("@ngx-formly/core"),require("@angular/forms"),require("@ionic/angular"),require("@ngx-formly/ionic/form-field")):"function"==typeof define&&define.amd?define("@ngx-formly/ionic/input",["exports","@angular/core","@angular/common","@ngx-formly/core","@angular/forms","@ionic/angular","@ngx-formly/ionic/form-field"],n):n(((o=o||self)["ngx-formly"]=o["ngx-formly"]||{},o["ngx-formly"].ionic=o["ngx-formly"].ionic||{},o["ngx-formly"].ionic.input={}),o.ng.core,o.ng.common,o.core$1,o.ng.forms,o.angular,o["ngx-formly"].ionic["form-field"])}(this,(function(o,n,e,r,t,i,l){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */var u=function(o,n){return(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(o,n){o.__proto__=n}||function(o,n){for(var e in n)n.hasOwnProperty(e)&&(o[e]=n[e])})(o,n)};var f=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return function(o,n){function e(){this.constructor=o}u(o,n),o.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}(e,o),e.decorators=[{type:n.Component,args:[{selector:"formly-field-ion-input",template:'\n    <ion-input\n      *ngIf="to.type !== \'number\'; else numberTmp"\n      [type]="to.type || \'text\'"\n      [formControl]="formControl"\n      [ionFormlyAttributes]="field"\n    ></ion-input>\n    <ng-template #numberTmp>\n      <ion-input type="number" [formControl]="formControl" [ionFormlyAttributes]="field"></ion-input>\n    </ng-template>\n  ',styles:[":host { display: inherit; }"]}]}],e}(r.FieldType),m=function(){function o(){}return o.decorators=[{type:n.NgModule,args:[{declarations:[f],imports:[e.CommonModule,t.ReactiveFormsModule,i.IonicModule,l.FormlyFormFieldModule,r.FormlyModule.forChild({types:[{name:"input",component:f,wrappers:["form-field"]}]})]}]}],o}();o.FormlyFieldInput=f,o.FormlyInputModule=m,Object.defineProperty(o,"__esModule",{value:!0})}));
//# sourceMappingURL=ngx-formly-ionic-input.umd.min.js.map