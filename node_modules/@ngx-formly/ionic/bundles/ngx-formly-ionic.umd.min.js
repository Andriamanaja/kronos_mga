!function(o,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/common"),require("@angular/forms"),require("@ionic/angular"),require("@ngx-formly/core/select"),require("@angular/core"),require("@ngx-formly/core")):"function"==typeof define&&define.amd?define("@ngx-formly/ionic",["exports","@angular/common","@angular/forms","@ionic/angular","@ngx-formly/core/select","@angular/core","@ngx-formly/core"],e):e((o["ngx-formly"]=o["ngx-formly"]||{},o["ngx-formly"].ionic={}),o.ng.common,o.ng.forms,o.angular,o.select,o.ng.core,o.core$1)}(this,function(o,e,n,t,r,i,l){"use strict";var a=function(o,e){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(o,e){o.__proto__=e}||function(o,e){for(var n in e)e.hasOwnProperty(n)&&(o[n]=e[n])})(o,e)};function s(o,e){function n(){this.constructor=o}a(o,e),o.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var p=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return s(e,o),e.decorators=[{type:i.Component,args:[{selector:"formly-field-ion-input",template:'\n    <ion-input *ngIf="to.type !== \'number\' else numberTmp" [type]="to.type || \'text\'" [formControl]="formControl" [ionFormlyAttributes]="field"></ion-input>\n    <ng-template #numberTmp>\n      <ion-input type="number" [formControl]="formControl" [ionFormlyAttributes]="field"></ion-input>\n    </ng-template>\n  ',styles:[":host { display: inherit; }"]}]}],e}(l.FieldType),m=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return s(e,o),e.decorators=[{type:i.Component,args:[{selector:"formly-field-ion-checkbox",template:'\n    <ion-checkbox\n      [formControl]="formControl"\n      [ionFormlyAttributes]="field">\n    </ion-checkbox>\n  '}]}],e}(l.FieldType),f=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return s(e,o),e.decorators=[{type:i.Component,args:[{selector:"formly-field-ion-datetime",template:'\n    <ion-datetime\n      [displayFormat]="to.displayFormat"\n      [pickerFormat]="to.pickerFormat"\n      [min]="to.min"\n      [max]="to.max"\n      [formControl]="formControl"\n      [ionFormlyAttributes]="field">\n    </ion-datetime>\n  '}]}],e}(l.FieldType),u=function(e){function o(){var o=null!==e&&e.apply(this,arguments)||this;return o.defaultOptions={templateOptions:{options:[]}},o}return s(o,e),o.decorators=[{type:i.Component,args:[{selector:"formly-field-ion-radio",template:'\n    <ion-list>\n      <ion-radio-group\n        [formControl]="formControl"\n        [ionFormlyAttributes]="field">\n        <ion-list-header>{{ to.label }}</ion-list-header>\n        <ion-item *ngFor="let option of to.options | formlySelectOptions:field | async">\n          <ion-label>{{ option.label }}</ion-label>\n          <ion-radio [value]="option.value"></ion-radio>\n        </ion-item>\n      </ion-radio-group>\n    </ion-list>\n    <ion-item lines="none" *ngIf="showError">\n      <ion-label>\n        <ion-text color="danger">\n          <p>\n            <formly-validation-message [field]="field"></formly-validation-message>\n          </p>\n        </ion-text>\n      </ion-label>\n    </ion-item>\n  '}]}],o}(l.FieldType),c=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return s(e,o),e.decorators=[{type:i.Component,args:[{selector:"formly-field-ion-toggle",template:'\n    <ion-toggle\n      [formControl]="formControl"\n      [ionFormlyAttributes]="field">\n    </ion-toggle>\n  '}]}],e}(l.FieldType),d=function(e){function o(){var o=null!==e&&e.apply(this,arguments)||this;return o.defaultOptions={templateOptions:{options:[]}},o}return s(o,e),o.decorators=[{type:i.Component,args:[{selector:"formly-field-ion-select",template:'\n    <ion-select\n      [formControl]="formControl"\n      [ionFormlyAttributes]="field"\n      [multiple]="to.multiple"\n      [interface]="to.interface">\n      <ion-select-option *ngFor="let option of to.options | formlySelectOptions:field | async" [value]="option.value">\n        {{ option.label }}\n      </ion-select-option>\n    </ion-select>\n  ',styles:[":host { display: inherit; }"]}]}],o}(l.FieldType),y=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return s(e,o),e.decorators=[{type:i.Component,args:[{selector:"formly-field-ion-range",template:'\n    <ion-range\n      [min]="to.min"\n      [max]="to.max"\n      [formControl]="formControl"\n      [ionFormlyAttributes]="field">\n      <ion-label slot="start">{{ to.min }}</ion-label>\n      <ion-label slot="end">{{ to.max }}</ion-label>\n    </ion-range>\n  ',styles:[":host { display: inherit; }"]}]}],e}(l.FieldType),g=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return s(e,o),e.decorators=[{type:i.Component,args:[{selector:"formly-field-ion-textarea",template:'\n    <ion-textarea\n      [formControl]="formControl"\n      [ionFormlyAttributes]="field"\n      [cols]="to.cols"\n      [rows]="to.rows">\n    </ion-textarea>\n  ',styles:[":host { display: inherit; }"]}]}],e}(l.FieldType),F=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return s(e,o),e.decorators=[{type:i.Component,args:[{selector:"formly-wrapper-ion-form-field",template:'\n    <ion-item [lines]="to.itemLines">\n      <ion-label [position]="to.labelPosition">\n        {{ to.label }}\n        <span *ngIf="to.required && to.hideRequiredMarker !== true">*</span>\n      </ion-label>\n      <ng-template #fieldComponent></ng-template>\n    </ion-item>\n    <ion-item lines="none" *ngIf="showError">\n      <ion-label>\n        <ion-text color="danger">\n          <p>\n            <formly-validation-message [field]="field"></formly-validation-message>\n          </p>\n        </ion-text>\n      </ion-label>\n    </ion-item>\n  '}]}],e}(l.FieldWrapper),h=[p,m,f,u,c,d,y,g,F],b={types:[{name:"input",component:p,wrappers:["form-field"]},{name:"checkbox",component:m,wrappers:["form-field"]},{name:"datetime",component:f,wrappers:["form-field"]},{name:"radio",component:u,wrappers:[]},{name:"toggle",component:c,wrappers:["form-field"]},{name:"select",component:d,wrappers:["form-field"]},{name:"range",component:y,wrappers:["form-field"]},{name:"textarea",component:g,wrappers:["form-field"]}],wrappers:[{name:"form-field",component:F}]},x=function(o){function e(){return null!==o&&o.apply(this,arguments)||this}return s(e,o),e.prototype.focusElement=function(o,e){o.setFocus&&e&&(o.getInputElement()?o.setFocus():setTimeout(function(){return o.setFocus()},300))},e.decorators=[{type:i.Directive,args:[{selector:"[ionFormlyAttributes]",host:{"(keyup)":"to.keyup && to.keyup(field, $event)","(keydown)":"to.keydown && to.keydown(field, $event)","(click)":"to.click && to.click(field, $event)","(keypress)":"to.keypress && to.keypress(field, $event)","(ionChange)":"to.change && to.change(field, $event)","(ionFocus)":"onFocus($event)","(ionBlur)":"onBlur($event)"}}]}],e.propDecorators={field:[{type:i.Input,args:["ionFormlyAttributes"]}]},e}(l.FormlyAttributes),C=function(){function o(){}return o.decorators=[{type:i.NgModule,args:[{declarations:[h,x],imports:[e.CommonModule,t.IonicModule,n.ReactiveFormsModule,r.FormlySelectModule,l.FormlyModule.forChild(b)],exports:[x]}]}],o}();o.FormlyIonicModule=C,o.FormlyFieldInput=p,o.FormlyFieldCheckbox=m,o.FormlyFieldDatetime=f,o.FormlyFieldRadio=u,o.FormlyFieldToggle=c,o.FormlyFieldSelect=d,o.FormlyFieldRange=y,o.FormlyFieldTextArea=g,o.FormlyWrapperFormField=F,o.ɵc=x,o.ɵa=h,o.ɵb=b,Object.defineProperty(o,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-formly-ionic.umd.min.js.map