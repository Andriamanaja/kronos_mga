{"version":3,"file":"ngx-formly-ionic-form-field.js","sources":["ng://@ngx-formly/ionic/form-field/form-field.wrapper.ts","ng://@ngx-formly/ionic/form-field/formly.attributes.ts","ng://@ngx-formly/ionic/form-field/form-field.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'formly-wrapper-ion-form-field',\n  template: `\n    <ion-item [lines]=\"to.itemLines\">\n      <ion-label [position]=\"to.labelPosition\">\n        {{ to.label }}\n        <span *ngIf=\"to.required && to.hideRequiredMarker !== true\">*</span>\n      </ion-label>\n      <ng-template #fieldComponent></ng-template>\n    </ion-item>\n    <ion-item lines=\"none\" *ngIf=\"showError\">\n      <ion-label>\n        <ion-text color=\"danger\">\n          <p>\n            <formly-validation-message [field]=\"field\"></formly-validation-message>\n          </p>\n        </ion-text>\n      </ion-label>\n    </ion-item>\n  `,\n})\nexport class FormlyWrapperFormField extends FieldWrapper {}\n","import { Directive, Input } from '@angular/core';\nimport { FormlyAttributes, FormlyFieldConfig } from '@ngx-formly/core';\n\n@Directive({\n  // tslint:disable-next-line\n  selector: '[ionFormlyAttributes]',\n  host: {\n    '(keyup)': 'to.keyup && to.keyup(field, $event)',\n    '(keydown)': 'to.keydown && to.keydown(field, $event)',\n    '(click)': 'to.click && to.click(field, $event)',\n    '(keypress)': 'to.keypress && to.keypress(field, $event)',\n\n    '(ionChange)': 'to.change && to.change(field, $event)',\n    '(ionFocus)': 'onFocus($event)',\n    '(ionBlur)': 'onBlur($event)',\n  },\n})\nexport class IonFormlyAttributes extends FormlyAttributes {\n  @Input('ionFormlyAttributes') field: FormlyFieldConfig;\n\n  focusElement(element, value: boolean) {\n    if (!element.setFocus || !value) {\n      return;\n    }\n\n    if (!element.getInputElement()) {\n      setTimeout(() => element.setFocus(), 300);\n    } else {\n      element.setFocus();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { FormlyWrapperFormField } from './form-field.wrapper';\nimport { IonFormlyAttributes } from './formly.attributes';\n\n@NgModule({\n  declarations: [FormlyWrapperFormField, IonFormlyAttributes],\n  exports: [IonFormlyAttributes],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n\n    FormlyModule.forChild({\n      wrappers: [\n        {\n          name: 'form-field',\n          component: FormlyWrapperFormField,\n        },\n      ],\n    }),\n  ],\n})\nexport class FormlyFormFieldModule {}\n"],"names":[],"mappings":";;;;;;;;;;AAAA,MAwBa,sBAAuB,SAAQ,YAAY;;;YArBvD,SAAS,SAAC;gBACT,QAAQ,EAAE,+BAA+B;gBACzC,QAAQ,EAAE;;;;;;;;;;;;;;;;;GAiBT;aACF;;;;;;;ACvBD,MAiBa,mBAAoB,SAAQ,gBAAgB;;;;;;IAGvD,YAAY,CAAC,OAAO,EAAE,KAAc;QAClC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,KAAK,EAAE;YAC/B,OAAO;SACR;QAED,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE;YAC9B,UAAU;;;YAAC,MAAM,OAAO,CAAC,QAAQ,EAAE,GAAE,GAAG,CAAC,CAAC;SAC3C;aAAM;YACL,OAAO,CAAC,QAAQ,EAAE,CAAC;SACpB;KACF;;;YA3BF,SAAS,SAAC;;gBAET,QAAQ,EAAE,uBAAuB;gBACjC,IAAI,EAAE;oBACJ,SAAS,EAAE,qCAAqC;oBAChD,WAAW,EAAE,yCAAyC;oBACtD,SAAS,EAAE,qCAAqC;oBAChD,YAAY,EAAE,2CAA2C;oBAEzD,aAAa,EAAE,uCAAuC;oBACtD,YAAY,EAAE,iBAAiB;oBAC/B,WAAW,EAAE,gBAAgB;iBAC9B;aACF;;;oBAEE,KAAK,SAAC,qBAAqB;;;;IAA5B,oCAAuD;;;;;;;AClBzD,MA0Ba,qBAAqB;;;YAlBjC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,sBAAsB,EAAE,mBAAmB,CAAC;gBAC3D,OAAO,EAAE,CAAC,mBAAmB,CAAC;gBAC9B,OAAO,EAAE;oBACP,YAAY;oBACZ,mBAAmB;oBACnB,WAAW;oBAEX,YAAY,CAAC,QAAQ,CAAC;wBACpB,QAAQ,EAAE;4BACR;gCACE,IAAI,EAAE,YAAY;gCAClB,SAAS,EAAE,sBAAsB;6BAClC;yBACF;qBACF,CAAC;iBACH;aACF;;;;;;;;;;;;;;;"}