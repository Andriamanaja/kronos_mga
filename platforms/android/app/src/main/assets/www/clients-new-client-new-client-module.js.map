{"version":3,"sources":["webpack:///./node_modules/@angular/material/esm5/autocomplete.es5.js","webpack:///./node_modules/@angular/material/esm5/icon.es5.js","webpack:///./src/app/clients/new-client/new-client.module.ts","webpack:///./src/app/clients/new-client/new-client.page.html","webpack:///./src/app/clients/new-client/new-client.page.scss","webpack:///./src/app/clients/new-client/new-client.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACkC;AAC6B;AACD;AACgO;AACxD;AACnL;AAC8B;AACJ;AACxB;AACI;AACiB;AACnB;AACJ;AACS;AACc;;AAE1E;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb,gCAAgC,iFAAkB;AAClD;AACA;AACA,UAAU;AACV;AACA,2CAA2C,4DAAc;AACzD;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA,YAAY;AACZ;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uCAAuC,EAAE;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,oCAAoC,EAAE;AAC3D;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,0CAA0C,mFAAqB;AAC/D,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,+DAA+D,kDAAkD,EAAE;AACnH;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,+BAA+B,4EAA0B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS,UAAU;AACnC;AACA,sDAAsD,gBAAgB,gBAAgB,cAAc,iCAAiC,kBAAkB,eAAe,iBAAiB,kBAAkB,WAAW,8BAA8B,+BAA+B,iDAAiD,mBAAmB,gDAAgD,kBAAkB,sDAAsD,gBAAgB,2BAA2B,4BAA4B,gDAAgD,gBAAgB,kCAAkC,wBAAwB,mBAAmB;AACjqB,mCAAmC,+DAAiB;AACpD,qCAAqC,qEAAuB;AAC5D;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,yBAAyB,UAAU,kFAA2B;AAC9D;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,+DAAiB,EAAE;AACnC,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,gCAAgC,OAAO,oDAAM,6CAA6C;AACnG,MAAM;AACN;AACA,oBAAoB,OAAO,uDAAS,SAAS,yDAAW,IAAI;AAC5D,iBAAiB,OAAO,uDAAS,oBAAoB;AACrD,mBAAmB,OAAO,6DAAe,SAAS,gEAAS,GAAG,oBAAoB,IAAI;AACtF,wBAAwB,OAAO,6DAAe,SAAS,kEAAW,IAAI;AACtE,uBAAuB,OAAO,mDAAK,EAAE;AACrC,iCAAiC,OAAO,mDAAK,EAAE;AAC/C,sBAAsB,OAAO,mDAAK,EAAE;AACpC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,qBAAqB,OAAO,mDAAK,oBAAoB;AACrD;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,wDAAwD;AACxD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,2CAA2C,4DAAc;AACzD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,wBAAwB,8CAA8C;AACtE;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,WAAW,4DAAO;AAClB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,iEAAiB;AAC9B,iBAAiB,gEAAU,cAAc,+BAA+B,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kDAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,6CAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,mDAAK;AACrC;AACA,uBAAuB,2CAAK,iEAAiE,iCAAiC,EAAE;AAChI;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAI,KAAK,iEAAS,cAAc,+BAA+B,EAAE;AACvF,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,mCAAmC,EAAE;AAC1D;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,yCAAyC,mFAAqB;AAC9D,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,mDAAK,kEAAkE,8DAAM,cAAc,+BAA+B,EAAE;AAC/I,oDAAoD,8DAAM,cAAc,+BAA+B,EAAE;AACzG,gBAAgB,gDAAE;AAClB;AACA,YAAY,2DAAG,mBAAmB,yBAAyB,+EAAwB,gBAAgB,EAAE;AACrG,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,gDAAE;AACrB;AACA,eAAe,mDAAK,CAAC,uDAAS,2BAA2B,uDAAS;AAClE,kBAAkB,8DAAM;AACxB,uBAAuB,EAAE;AACzB,0CAA0C,EAAE;AAC5C,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,gDAAgD,sCAAsC,EAAE;AACxF;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAM;AAC9B;AACA;AACA,6CAA6C,2DAAK;AAClD;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,yCAAyC,8DAAQ,gBAAgB,gEAAU;AAC3E,8CAA8C,yDAAG;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE;AACnC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uCAAuC,uBAAuB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,yBAAyB,4FAA6B;AACtD,mBAAmB,EAAE;AACrB,gCAAgC,uFAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,kEAAkE,4DAAI;AACtE,mBAAmB,EAAE;AACrB,mEAAmE,2DAAG,cAAc,sDAAsD,EAAE;AAC5I;AACA;AACA,QAAQ,6DAAK;AACb;AACA,eAAe,mDAAK;AACpB;AACA;AACA;AACA,QAAQ,iEAAS;AACjB;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA,SAAS;AACT;AACA,QAAQ,4DAAI;AACZ;AACA,yCAAyC,uCAAuC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,+BAA+B,kEAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4DAAM,uBAAuB,8DAAQ;AAC3E;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,+CAA+C,gCAAgC;AAC/E;AACA,iBAAiB;AACjB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uCAAuC,EAAE;AACzC;AACA;AACA,mCAAmC,+BAA+B;AAClE;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,kEAAa;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yDAAyD;AACzD,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,OAAO,4DAAO,EAAE;AACzB,SAAS,OAAO,8DAAgB,EAAE;AAClC,SAAS,OAAO,oDAAM,EAAE;AACxB,SAAS,OAAO,+DAAiB,EAAE;AACnC,SAAS,gCAAgC,OAAO,oDAAM,6CAA6C,GAAG;AACtG,SAAS,OAAO,gEAAc,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAClE,SAAS,OAAO,0EAAY,gBAAgB,OAAO,sDAAQ,EAAE,GAAG,OAAO,kDAAI,EAAE,GAAG;AAChF,SAAS,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAClG,SAAS,OAAO,qEAAa;AAC7B,MAAM;AACN;AACA,wBAAwB,OAAO,mDAAK,8BAA8B;AAClE,uBAAuB,OAAO,mDAAK,yCAAyC;AAC5E,iCAAiC,OAAO,mDAAK,2BAA2B;AACxE,gCAAgC,OAAO,mDAAK,sCAAsC;AAClF;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB,8BAA8B,sEAAe,EAAE,kEAAa,EAAE,sEAAe,EAAE,4DAAY;AAC3F;AACA;AACA,wBAAwB,sEAAe;AACvC;AACA;AACA,wBAAwB,sEAAe;AACvC;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEuf;AACvf;;;;;;;;;;;;;ACpuCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC2C;AACO;AAC+K;AACxK;AACT;AAC6B;AAC3C;AACmC;AACP;;AAE9D;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,0CAA0C,EAAE;AAC5C;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,2CAA2C,EAAE,gCAAgC,6DAAe;AAC5F;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,2CAA2C,EAAE,gCAAgC,6DAAe;AAC5F;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,qCAAqC,EAAE;AACvC,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,mBAAmB;AACtD,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,2CAA2C,6DAAe;AAC1D;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,+CAAE;AACrB;AACA,4EAA4E,0DAAG,iBAAiB,gDAAgD,EAAE,iBAAiB,EAAE,GAAG,0DAAG,iBAAiB,sBAAsB,EAAE;AACpN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,eAAe,uDAAU;AACzB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,+CAAE;AACrB;AACA;AACA;AACA,4DAA4D,0DAAG,iBAAiB,gCAAgC,EAAE,GAAG,0DAAG,iBAAiB,sBAAsB,EAAE;AACjK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,8CAA8C,kCAAkC,EAAE;AAClF;AACA,uEAAuE,iEAAU;AACjF,2BAA2B,EAAE;AAC7B,oDAAoD,6DAAe;AACnE;AACA;AACA;AACA,uBAAuB,+CAAE;AACzB,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,qDAAQ,4BAA4B,0DAAG;AACtD,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,0DAAG,qBAAqB,sDAAsD,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAE;AACrB;AACA,+CAA+C,0DAAG;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA,sDAAsD,EAAE;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,8BAA8B,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,2CAA2C,6DAAe;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,6CAA6C,uBAAuB,OAAO,+DAAQ,cAAc,gDAAgD,EAAE,GAAG,4DAAK;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,oBAAoB,EAAE;AACtB,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,0CAA0C,EAAE;AAC5C;AACA;AACA;AACA;AACA,wBAAwB,EAAE;AAC1B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,SAAS,OAAO,wDAAU,UAAU,qBAAqB,IAAI;AAC7D;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,+DAAU,gBAAgB,OAAO,sDAAQ,EAAE,GAAG;AAC9D,SAAS,OAAO,sEAAY,EAAE;AAC9B,SAAS,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AAC/F,MAAM;AACN,yDAAyD,sEAAgB,EAAE,8CAA8C,4BAA4B,4DAAM,CAAC,+DAAU,MAAM,4DAAM,CAAC,sEAAY,GAAG,4DAAM,CAAC,wDAAQ,MAAM,EAAE,8CAA8C;AACvQ;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa,sDAAQ,QAAQ,sDAAQ;AACrC,aAAa,sDAAQ,IAAI,+DAAU;AACnC,QAAQ,sEAAY;AACpB,aAAa,sDAAQ,gBAAgB,EAAE,KAAK,wDAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,WAAW,EAAE;AACb,wBAAwB,yEAAU;AAClC;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,4BAA4B,4DAAc;AAC1C;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB,oBAAoB,4DAAM,CAAC,wDAAQ;AACnC,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA,kCAAkC,iEAAiE;AACnG;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,yBAAyB;AACnD;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,mFAAqB;AAChD,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,sBAAsB,EAAE;AAC7C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,0CAA0C;AAC1C,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,2DAAI,+BAA+B,kCAAkC,EAAE,kBAAkB,6DAA6D,EAAE;AACrO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oCAAoC,EAAE;AACtC,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE,wBAAwB,8BAA8B;AACxF;AACA,aAAa;AACb;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS,UAAU;AACnC;AACA;AACA,wCAAwC,4BAA4B,qBAAqB,kBAAkB,YAAY,WAAW,0BAA0B,kBAAkB,eAAe,oBAAoB,cAAc,+BAA+B,sBAAsB,gLAAgL,cAAc,kNAAkN,YAAY;AAChrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,mCAAmC,+DAAiB;AACpD,qCAAqC,qEAAuB;AAC5D,iBAAiB,IAAI;AACrB;AACA;AACA,0CAA0C;AAC1C,SAAS,OAAO,wDAAU,EAAE;AAC5B,SAAS,wBAAwB;AACjC,SAAS,6BAA6B,OAAO,uDAAS,0BAA0B,GAAG;AACnF,SAAS,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,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","file":"clients-new-client-new-client-module.js","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { __extends } from 'tslib';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, ElementRef, EventEmitter, Inject, InjectionToken, Input, Output, TemplateRef, ViewChild, ViewEncapsulation, Directive, forwardRef, Host, NgZone, Optional, ViewContainerRef, NgModule } from '@angular/core';\nimport { MAT_OPTION_PARENT_COMPONENT, MatOptgroup, MatOption, mixinDisableRipple, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionSelectionChange, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { filter, take, switchMap, delay, tap, map } from 'rxjs/operators';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField } from '@angular/material/form-field';\nimport { Subscription, defer, fromEvent, merge, of, Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nvar _uniqueAutocompleteIdCounter = 0;\n/**\n * Event object that is emitted when an autocomplete option is selected.\n */\nvar  /**\n * Event object that is emitted when an autocomplete option is selected.\n */\nMatAutocompleteSelectedEvent = /** @class */ (function () {\n    function MatAutocompleteSelectedEvent(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n    return MatAutocompleteSelectedEvent;\n}());\n// Boilerplate for applying mixins to MatAutocomplete.\n/**\n * \\@docs-private\n */\nvar  \n// Boilerplate for applying mixins to MatAutocomplete.\n/**\n * \\@docs-private\n */\nMatAutocompleteBase = /** @class */ (function () {\n    function MatAutocompleteBase() {\n    }\n    return MatAutocompleteBase;\n}());\n/** @type {?} */\nvar _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/**\n * Injection token to be used to override the default options for `mat-autocomplete`.\n * @type {?}\n */\nvar MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\nvar MatAutocomplete = /** @class */ (function (_super) {\n    __extends(MatAutocomplete, _super);\n    function MatAutocomplete(_changeDetectorRef, _elementRef, defaults) {\n        var _this = _super.call(this) || this;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this._elementRef = _elementRef;\n        /**\n         * Whether the autocomplete panel should be visible, depending on option length.\n         */\n        _this.showPanel = false;\n        _this._isOpen = false;\n        /**\n         * Function that maps an option's control value to its display value in the trigger.\n         */\n        _this.displayWith = null;\n        /**\n         * Event that is emitted whenever an option from the list is selected.\n         */\n        _this.optionSelected = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is opened.\n         */\n        _this.opened = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is closed.\n         */\n        _this.closed = new EventEmitter();\n        _this._classList = {};\n        /**\n         * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n         */\n        _this.id = \"mat-autocomplete-\" + _uniqueAutocompleteIdCounter++;\n        _this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n        return _this;\n    }\n    Object.defineProperty(MatAutocomplete.prototype, \"isOpen\", {\n        /** Whether the autocomplete panel is open. */\n        get: /**\n         * Whether the autocomplete panel is open.\n         * @return {?}\n         */\n        function () { return this._isOpen && this.showPanel; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatAutocomplete.prototype, \"autoActiveFirstOption\", {\n        /**\n         * Whether the first option should be highlighted when the autocomplete panel is opened.\n         * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n         */\n        get: /**\n         * Whether the first option should be highlighted when the autocomplete panel is opened.\n         * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n         * @return {?}\n         */\n        function () { return this._autoActiveFirstOption; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._autoActiveFirstOption = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatAutocomplete.prototype, \"classList\", {\n        /**\n         * Takes classes set on the host mat-autocomplete element and applies them to the panel\n         * inside the overlay container to allow for easy styling.\n         */\n        set: /**\n         * Takes classes set on the host mat-autocomplete element and applies them to the panel\n         * inside the overlay container to allow for easy styling.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            var _this = this;\n            if (value && value.length) {\n                value.split(' ').forEach(function (className) { return _this._classList[className.trim()] = true; });\n                this._elementRef.nativeElement.className = '';\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatAutocomplete.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        // Set the initial visibility state.\n        this._setVisibility();\n    };\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    MatAutocomplete.prototype._setScrollTop = /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    function (scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    };\n    /** Returns the panel's scrollTop. */\n    /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    MatAutocomplete.prototype._getScrollTop = /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    function () {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    };\n    /** Panel should hide itself when the option list is empty. */\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    MatAutocomplete.prototype._setVisibility = /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    function () {\n        this.showPanel = !!this.options.length;\n        this._classList['mat-autocomplete-visible'] = this.showPanel;\n        this._classList['mat-autocomplete-hidden'] = !this.showPanel;\n        this._changeDetectorRef.markForCheck();\n    };\n    /** Emits the `select` event. */\n    /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    MatAutocomplete.prototype._emitSelectEvent = /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    function (option) {\n        /** @type {?} */\n        var event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    };\n    MatAutocomplete.decorators = [\n        { type: Component, args: [{selector: 'mat-autocomplete',\n                    template: \"<ng-template><div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel><ng-content></ng-content></div></ng-template>\",\n                    styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}@media (-ms-high-contrast:active){.mat-autocomplete-panel{outline:solid 1px}}\"],\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    exportAs: 'matAutocomplete',\n                    inputs: ['disableRipple'],\n                    host: {\n                        'class': 'mat-autocomplete'\n                    },\n                    providers: [\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    MatAutocomplete.ctorParameters = function () { return [\n        { type: ChangeDetectorRef },\n        { type: ElementRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n    ]; };\n    MatAutocomplete.propDecorators = {\n        template: [{ type: ViewChild, args: [TemplateRef,] }],\n        panel: [{ type: ViewChild, args: ['panel',] }],\n        options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n        optionGroups: [{ type: ContentChildren, args: [MatOptgroup,] }],\n        displayWith: [{ type: Input }],\n        autoActiveFirstOption: [{ type: Input }],\n        panelWidth: [{ type: Input }],\n        optionSelected: [{ type: Output }],\n        opened: [{ type: Output }],\n        closed: [{ type: Output }],\n        classList: [{ type: Input, args: ['class',] }]\n    };\n    return MatAutocomplete;\n}(_MatAutocompleteMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nvar MatAutocompleteOrigin = /** @class */ (function () {\n    function MatAutocompleteOrigin(elementRef) {\n        this.elementRef = elementRef;\n    }\n    MatAutocompleteOrigin.decorators = [\n        { type: Directive, args: [{\n                    selector: '[matAutocompleteOrigin]',\n                    exportAs: 'matAutocompleteOrigin',\n                },] },\n    ];\n    /** @nocollapse */\n    MatAutocompleteOrigin.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    return MatAutocompleteOrigin;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The height of each autocomplete option.\n * @type {?}\n */\nvar AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @type {?}\n */\nvar AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Injection token that determines the scroll handling while the autocomplete panel is open.\n * @type {?}\n */\nvar MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return function () { return overlay.scrollStrategies.reposition(); };\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nvar MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n * @type {?}\n */\nvar MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return MatAutocompleteTrigger; }),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nvar MatAutocompleteTrigger = /** @class */ (function () {\n    function MatAutocompleteTrigger(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        var _this = this;\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /**\n         * Whether or not the label state is being overridden.\n         */\n        this._manuallyFloatingLabel = false;\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /**\n         * Stream of keyboard events that can close the panel.\n         */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = function () {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            _this._canOpenOnNextFocus =\n                document.activeElement !== _this._element.nativeElement || _this.panelOpen;\n        };\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = function () { };\n        /**\n         * `View -> model callback called when autocomplete has been touched`\n         */\n        this._onTouched = function () { };\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * \\@docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /**\n         * Stream of autocomplete option selections.\n         */\n        this.optionSelections = defer(function () {\n            if (_this.autocomplete && _this.autocomplete.options) {\n                return merge.apply(void 0, _this.autocomplete.options.map(function (option) { return option.onSelectionChange; }));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return _this._zone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap(function () { return _this.optionSelections; }));\n        });\n        if (typeof window !== 'undefined') {\n            _zone.runOutsideAngular(function () {\n                window.addEventListener('blur', _this._windowBlurHandler);\n            });\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    Object.defineProperty(MatAutocompleteTrigger.prototype, \"autocompleteDisabled\", {\n        /**\n         * Whether the autocomplete is disabled. When disabled, the element will\n         * act as a regular input and the user won't be able to open the panel.\n         */\n        get: /**\n         * Whether the autocomplete is disabled. When disabled, the element will\n         * act as a regular input and the user won't be able to open the panel.\n         * @return {?}\n         */\n        function () { return this._autocompleteDisabled; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._autocompleteDisabled = coerceBooleanProperty(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    };\n    Object.defineProperty(MatAutocompleteTrigger.prototype, \"panelOpen\", {\n        /** Whether or not the autocomplete panel is open. */\n        get: /**\n         * Whether or not the autocomplete panel is open.\n         * @return {?}\n         */\n        function () {\n            return this._overlayAttached && this.autocomplete.showPanel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Opens the autocomplete suggestion panel. */\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.openPanel = /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    function () {\n        this._attachOverlay();\n        this._floatLabel();\n    };\n    /** Closes the autocomplete suggestion panel. */\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.closePanel = /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    function () {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    };\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.updatePosition = /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     * @return {?}\n     */\n    function () {\n        if (this._overlayAttached) {\n            (/** @type {?} */ (this._overlayRef)).updatePosition();\n        }\n    };\n    Object.defineProperty(MatAutocompleteTrigger.prototype, \"panelClosingActions\", {\n        /**\n         * A stream of actions that should close the autocomplete panel, including\n         * when an option is selected, on blur, and when TAB is pressed.\n         */\n        get: /**\n         * A stream of actions that should close the autocomplete panel, including\n         * when an option is selected, on blur, and when TAB is pressed.\n         * @return {?}\n         */\n        function () {\n            var _this = this;\n            return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(function () { return _this._overlayAttached; })), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n                this._overlayRef.detachments().pipe(filter(function () { return _this._overlayAttached; })) :\n                of()).pipe(\n            // Normalize the output so we return a consistent type.\n            map(function (event) { return event instanceof MatOptionSelectionChange ? event : null; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatAutocompleteTrigger.prototype, \"activeOption\", {\n        /** The currently active option, coerced to MatOption type. */\n        get: /**\n         * The currently active option, coerced to MatOption type.\n         * @return {?}\n         */\n        function () {\n            if (this.autocomplete && this.autocomplete._keyManager) {\n                return this.autocomplete._keyManager.activeItem;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Stream of clicks outside of the autocomplete panel. */\n    /**\n     * Stream of clicks outside of the autocomplete panel.\n     * @private\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._getOutsideClickStream = /**\n     * Stream of clicks outside of the autocomplete panel.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this._document) {\n            return of(null);\n        }\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n            .pipe(filter(function (event) {\n            /** @type {?} */\n            var clickTarget = (/** @type {?} */ (event.target));\n            /** @type {?} */\n            var formField = _this._formField ?\n                _this._formField._elementRef.nativeElement : null;\n            return _this._overlayAttached &&\n                clickTarget !== _this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!!_this._overlayRef && !_this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    };\n    // Implemented as part of ControlValueAccessor.\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.writeValue = \n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var _this = this;\n        Promise.resolve(null).then(function () { return _this._setTriggerValue(value); });\n    };\n    // Implemented as part of ControlValueAccessor.\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.registerOnChange = \n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._onChange = fn;\n    };\n    // Implemented as part of ControlValueAccessor.\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.registerOnTouched = \n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        this._onTouched = fn;\n    };\n    // Implemented as part of ControlValueAccessor.\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype.setDisabledState = \n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    function (isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._handleKeydown = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            /** @type {?} */\n            var prevActiveItem = this.autocomplete._keyManager.activeItem;\n            /** @type {?} */\n            var isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption();\n            }\n        }\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._handleInput = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        /** @type {?} */\n        var target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        var value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._handleFocus = /**\n     * @return {?}\n     */\n    function () {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    };\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @private\n     * @param {?=} shouldAnimate Whether the label should be animated when it is floated.\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._floatLabel = /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @private\n     * @param {?=} shouldAnimate Whether the label should be animated when it is floated.\n     * @return {?}\n     */\n    function (shouldAnimate) {\n        if (shouldAnimate === void 0) { shouldAnimate = false; }\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    };\n    /** If the label has been manually elevated, return it to its normal state. */\n    /**\n     * If the label has been manually elevated, return it to its normal state.\n     * @private\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._resetLabel = /**\n     * If the label has been manually elevated, return it to its normal state.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    };\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     */\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @private\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._scrollToOption = /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var index = this.autocomplete._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        var labelCount = _countGroupLabelsBeforeOption(index, this.autocomplete.options, this.autocomplete.optionGroups);\n        /** @type {?} */\n        var newScrollPosition = _getOptionScrollPosition(index + labelCount, AUTOCOMPLETE_OPTION_HEIGHT, this.autocomplete._getScrollTop(), AUTOCOMPLETE_PANEL_HEIGHT);\n        this.autocomplete._setScrollTop(newScrollPosition);\n    };\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @private\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._subscribeToClosingActions = /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var firstStable = this._zone.onStable.asObservable().pipe(take(1));\n        /** @type {?} */\n        var optionChanges = this.autocomplete.options.changes.pipe(tap(function () { return _this._positionStrategy.reapplyLastPosition(); }), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(function () {\n            _this._resetActiveItem();\n            _this.autocomplete._setVisibility();\n            if (_this.panelOpen) {\n                (/** @type {?} */ (_this._overlayRef)).updatePosition();\n            }\n            return _this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(function (event) { return _this._setValueAndClose(event); });\n    };\n    /** Destroys the autocomplete suggestion panel. */\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @private\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._destroyPanel = /**\n     * Destroys the autocomplete suggestion panel.\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    };\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._setTriggerValue = /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        /** @type {?} */\n        var inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    };\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._setValueAndClose = /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    };\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @private\n     * @param {?} skip\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._clearPreviousSelectedOption = /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @private\n     * @param {?} skip\n     * @return {?}\n     */\n    function (skip) {\n        this.autocomplete.options.forEach(function (option) {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        });\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._attachOverlay = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.autocomplete) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        /** @type {?} */\n        var overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(function (event) {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    _this._resetActiveItem();\n                    _this._closeKeyEventStream.next();\n                }\n            });\n            if (this._viewportRuler) {\n                this._viewportSubscription = this._viewportRuler.change().subscribe(function () {\n                    if (_this.panelOpen && overlayRef) {\n                        overlayRef.updateSize({ width: _this._getPanelWidth() });\n                    }\n                });\n            }\n        }\n        else {\n            /** @type {?} */\n            var position = (/** @type {?} */ (overlayRef.getConfig().positionStrategy));\n            // Update the trigger, panel width and direction, in case anything has changed.\n            position.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        /** @type {?} */\n        var wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._getOverlayConfig = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._getOverlayPosition = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        this._positionStrategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withPositions([\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'top'\n            },\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'bottom',\n                // The overlay edge connected to the trigger should have squared corners, while\n                // the opposite end has rounded corners. We apply a CSS class to swap the\n                // border-radius based on the overlay position.\n                panelClass: 'mat-autocomplete-panel-above'\n            }\n        ]);\n        return this._positionStrategy;\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._getConnectedElement = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._getPanelWidth = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    };\n    /** Returns the width of the input element, so the panel width can match it. */\n    /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @private\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._getHostWidth = /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @private\n     * @return {?}\n     */\n    function () {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    };\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     * @private\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._resetActiveItem = /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     * @private\n     * @return {?}\n     */\n    function () {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    };\n    /** Determines whether the panel can be opened. */\n    /**\n     * Determines whether the panel can be opened.\n     * @private\n     * @return {?}\n     */\n    MatAutocompleteTrigger.prototype._canOpen = /**\n     * Determines whether the panel can be opened.\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    };\n    MatAutocompleteTrigger.decorators = [\n        { type: Directive, args: [{\n                    selector: \"input[matAutocomplete], textarea[matAutocomplete]\",\n                    host: {\n                        '[attr.autocomplete]': 'autocompleteAttribute',\n                        '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                        '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                        '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                        '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                        '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                        // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                        // a little earlier. This avoids issues where IE delays the focusing of the input.\n                        '(focusin)': '_handleFocus()',\n                        '(blur)': '_onTouched()',\n                        '(input)': '_handleInput($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                    exportAs: 'matAutocompleteTrigger',\n                    providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    MatAutocompleteTrigger.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: Overlay },\n        { type: ViewContainerRef },\n        { type: NgZone },\n        { type: ChangeDetectorRef },\n        { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n        { type: Directionality, decorators: [{ type: Optional }] },\n        { type: MatFormField, decorators: [{ type: Optional }, { type: Host }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n        { type: ViewportRuler }\n    ]; };\n    MatAutocompleteTrigger.propDecorators = {\n        autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n        connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n        autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n        autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n    };\n    return MatAutocompleteTrigger;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatAutocompleteModule = /** @class */ (function () {\n    function MatAutocompleteModule() {\n    }\n    MatAutocompleteModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n                    exports: [\n                        MatAutocomplete,\n                        MatOptionModule,\n                        MatAutocompleteTrigger,\n                        MatAutocompleteOrigin,\n                        MatCommonModule\n                    ],\n                    declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                    providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                },] },\n    ];\n    return MatAutocompleteModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MatAutocompleteSelectedEvent, MatAutocompleteBase, _MatAutocompleteMixinBase, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MatAutocomplete, MatAutocompleteModule, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, getMatAutocompleteMissingPanelError, AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocompleteTrigger, MatAutocompleteOrigin };\n//# sourceMappingURL=autocomplete.es5.js.map\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { DOCUMENT } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable, Optional, SecurityContext, SkipSelf, NgModule, Attribute, ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation, InjectionToken, inject, defineInjectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { forkJoin, of, throwError } from 'rxjs';\nimport { catchError, finalize, map, share, tap, take } from 'rxjs/operators';\nimport { __extends } from 'tslib';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(\"Unable to find icon with the name \\\"\" + iconName + \"\\\"\");\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including \\@angular/http.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(\"The URL provided to MatIconRegistry was not trusted as a resource URL \" +\n        (\"via Angular's DomSanitizer. Attempted URL was \\\"\" + url + \"\\\".\"));\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * \\@docs-private\n * @param {?} literal HTML that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(\"The literal provided to MatIconRegistry was not trusted as safe HTML by \" +\n        (\"Angular's DomSanitizer. Attempted literal was \\\"\" + literal + \"\\\".\"));\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nvar /**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nSvgIconConfig = /** @class */ (function () {\n    function SvgIconConfig(data) {\n        // Note that we can't use `instanceof SVGElement` here,\n        // because it'll break during server-side rendering.\n        if (!!((/** @type {?} */ (data))).nodeName) {\n            this.svgElement = (/** @type {?} */ (data));\n        }\n        else {\n            this.url = (/** @type {?} */ (data));\n        }\n    }\n    return SvgIconConfig;\n}());\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nvar MatIconRegistry = /** @class */ (function () {\n    function MatIconRegistry(_httpClient, _sanitizer, document) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /**\n         * Cache for icons loaded by direct URLs.\n         */\n        this._cachedIconsByUrl = new Map();\n        /**\n         * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n         */\n        this._inProgressUrlFetches = new Map();\n        /**\n         * Map from font identifiers to their CSS class names. Used for icon fonts.\n         */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {THIS}\n     */\n    MatIconRegistry.prototype.addSvgIcon = /**\n     * Registers an icon by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {THIS}\n     */\n    function (iconName, url) {\n        return (/** @type {?} */ (this)).addSvgIconInNamespace('', iconName, url);\n    };\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @return {THIS}\n     */\n    MatIconRegistry.prototype.addSvgIconLiteral = /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @return {THIS}\n     */\n    function (iconName, literal) {\n        return (/** @type {?} */ (this)).addSvgIconLiteralInNamespace('', iconName, literal);\n    };\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {THIS}\n     */\n    MatIconRegistry.prototype.addSvgIconInNamespace = /**\n     * Registers an icon by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @return {THIS}\n     */\n    function (namespace, iconName, url) {\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url));\n    };\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @return {THIS}\n     */\n    MatIconRegistry.prototype.addSvgIconLiteralInNamespace = /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @return {THIS}\n     */\n    function (namespace, iconName, literal) {\n        /** @type {?} */\n        var sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        var svgElement = (/** @type {?} */ (this))._createSvgElementForSingleIcon(sanitizedLiteral);\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(svgElement));\n    };\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} url\n     * @return {THIS}\n     */\n    MatIconRegistry.prototype.addSvgIconSet = /**\n     * Registers an icon set by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} url\n     * @return {THIS}\n     */\n    function (url) {\n        return (/** @type {?} */ (this)).addSvgIconSetInNamespace('', url);\n    };\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} literal SVG source of the icon set.\n     * @return {THIS}\n     */\n    MatIconRegistry.prototype.addSvgIconSetLiteral = /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} literal SVG source of the icon set.\n     * @return {THIS}\n     */\n    function (literal) {\n        return (/** @type {?} */ (this)).addSvgIconSetLiteralInNamespace('', literal);\n    };\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @return {THIS}\n     */\n    MatIconRegistry.prototype.addSvgIconSetInNamespace = /**\n     * Registers an icon set by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @return {THIS}\n     */\n    function (namespace, url) {\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(url));\n    };\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @return {THIS}\n     */\n    MatIconRegistry.prototype.addSvgIconSetLiteralInNamespace = /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @return {THIS}\n     */\n    function (namespace, literal) {\n        /** @type {?} */\n        var sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        var svgElement = (/** @type {?} */ (this))._svgElementFromString(sanitizedLiteral);\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(svgElement));\n    };\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {THIS}\n     */\n    MatIconRegistry.prototype.registerFontClassAlias = /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {THIS}\n     */\n    function (alias, className) {\n        if (className === void 0) { className = alias; }\n        (/** @type {?} */ (this))._fontCssClassesByAlias.set(alias, className);\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    MatIconRegistry.prototype.classNameForFontAlias = /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    function (alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    };\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} className\n     * @return {THIS}\n     */\n    MatIconRegistry.prototype.setDefaultFontSetClass = /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} className\n     * @return {THIS}\n     */\n    function (className) {\n        (/** @type {?} */ (this))._defaultFontSetClass = className;\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.getDefaultFontSetClass = /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    function () {\n        return this._defaultFontSetClass;\n    };\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.getSvgIconFromUrl = /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    function (safeUrl) {\n        var _this = this;\n        /** @type {?} */\n        var url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        /** @type {?} */\n        var cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(tap(function (svg) { return _this._cachedIconsByUrl.set((/** @type {?} */ (url)), svg); }), map(function (svg) { return cloneSvg(svg); }));\n    };\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    MatIconRegistry.prototype.getNamedSvgIcon = /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    function (name, namespace) {\n        if (namespace === void 0) { namespace = ''; }\n        // Return (copy of) cached icon if possible.\n        /** @type {?} */\n        var key = iconKey(namespace, name);\n        /** @type {?} */\n        var config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        /** @type {?} */\n        var iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    };\n    /**\n     * @return {?}\n     */\n    MatIconRegistry.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    };\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    MatIconRegistry.prototype._getSvgFromConfig = /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(tap(function (svg) { return config.svgElement = svg; }), map(function (svg) { return cloneSvg(svg); }));\n        }\n    };\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @private\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    MatIconRegistry.prototype._getSvgFromIconSetConfigs = /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @private\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    function (name, iconSetConfigs) {\n        var _this = this;\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        /** @type {?} */\n        var namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        /** @type {?} */\n        var iconSetFetchRequests = iconSetConfigs\n            .filter(function (iconSetConfig) { return !iconSetConfig.svgElement; })\n            .map(function (iconSetConfig) {\n            return _this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError(function (err) {\n                /** @type {?} */\n                var url = _this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                console.error(\"Loading icon set URL: \" + url + \" failed: \" + err.message);\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(function () {\n            /** @type {?} */\n            var foundIcon = _this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    };\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    MatIconRegistry.prototype._extractIconWithNameFromAnySet = /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    function (iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (var i = iconSetConfigs.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            var config = iconSetConfigs[i];\n            if (config.svgElement) {\n                /** @type {?} */\n                var foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    MatIconRegistry.prototype._loadSvgIconFromConfig = /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        var _this = this;\n        return this._fetchUrl(config.url)\n            .pipe(map(function (svgText) { return _this._createSvgElementForSingleIcon(svgText); }));\n    };\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    MatIconRegistry.prototype._loadSvgIconSetFromConfig = /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        var _this = this;\n        // If the SVG for this icon set has already been parsed, do nothing.\n        if (config.svgElement) {\n            return of(config.svgElement);\n        }\n        return this._fetchUrl(config.url).pipe(map(function (svgText) {\n            // It is possible that the icon set was parsed and cached by an earlier request, so parsing\n            // only needs to occur if the cache is yet unset.\n            if (!config.svgElement) {\n                config.svgElement = _this._svgElementFromString(svgText);\n            }\n            return config.svgElement;\n        }));\n    };\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     */\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @private\n     * @param {?} responseText\n     * @return {?}\n     */\n    MatIconRegistry.prototype._createSvgElementForSingleIcon = /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @private\n     * @param {?} responseText\n     * @return {?}\n     */\n    function (responseText) {\n        /** @type {?} */\n        var svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg);\n        return svg;\n    };\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @return {?}\n     */\n    MatIconRegistry.prototype._extractSvgIconFromSet = /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @return {?}\n     */\n    function (iconSet, iconName) {\n        /** @type {?} */\n        var iconSource = iconSet.querySelector('#' + iconName);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        /** @type {?} */\n        var iconElement = (/** @type {?} */ (iconSource.cloneNode(true)));\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes((/** @type {?} */ (iconElement)));\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement));\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        /** @type {?} */\n        var svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg);\n    };\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    MatIconRegistry.prototype._svgElementFromString = /**\n     * Creates a DOM element from the given SVG string.\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) {\n        /** @type {?} */\n        var div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        /** @type {?} */\n        var svg = (/** @type {?} */ (div.querySelector('svg')));\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    };\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    MatIconRegistry.prototype._toSvgElement = /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        /** @type {?} */\n        var svg = this._svgElementFromString('<svg></svg>');\n        for (var i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    };\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    MatIconRegistry.prototype._setSvgAttributes = /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    function (svg) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        return svg;\n    };\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @private\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    MatIconRegistry.prototype._fetchUrl = /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @private\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    function (safeUrl) {\n        var _this = this;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        if (safeUrl == null) {\n            throw Error(\"Cannot fetch icon from URL \\\"\" + safeUrl + \"\\\".\");\n        }\n        /** @type {?} */\n        var url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        /** @type {?} */\n        var inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        // TODO(jelbourn): for some reason, the `finalize` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        /** @type {?} */\n        var req = this._httpClient.get(url, { responseType: 'text' }).pipe(finalize(function () { return _this._inProgressUrlFetches.delete(url); }), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    };\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    MatIconRegistry.prototype._addSvgIconConfig = /**\n     * Registers an icon config by name in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    function (namespace, iconName, config) {\n        (/** @type {?} */ (this))._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return (/** @type {?} */ (this));\n    };\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    MatIconRegistry.prototype._addSvgIconSetConfig = /**\n     * Registers an icon set config in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    function (namespace, config) {\n        /** @type {?} */\n        var configNamespace = (/** @type {?} */ (this))._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            (/** @type {?} */ (this))._iconSetConfigs.set(namespace, [config]);\n        }\n        return (/** @type {?} */ (this));\n    };\n    MatIconRegistry.decorators = [\n        { type: Injectable, args: [{ providedIn: 'root' },] },\n    ];\n    /** @nocollapse */\n    MatIconRegistry.ctorParameters = function () { return [\n        { type: HttpClient, decorators: [{ type: Optional }] },\n        { type: DomSanitizer },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n    ]; };\n    /** @nocollapse */ MatIconRegistry.ngInjectableDef = defineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(inject(HttpClient, 8), inject(DomSanitizer), inject(DOCUMENT, 8)); }, token: MatIconRegistry, providedIn: \"root\" });\n    return MatIconRegistry;\n}());\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} httpClient\n * @param {?} sanitizer\n * @param {?=} document\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document);\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nvar ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        [new Optional(), (/** @type {?} */ (DOCUMENT))],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return (/** @type {?} */ (svg.cloneNode(true)));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatIcon.\n/**\n * \\@docs-private\n */\nvar  \n// Boilerplate for applying mixins to MatIcon.\n/**\n * \\@docs-private\n */\nMatIconBase = /** @class */ (function () {\n    function MatIconBase(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    return MatIconBase;\n}());\n/** @type {?} */\nvar _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nvar MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    /** @type {?} */\n    var _document = inject(DOCUMENT);\n    /** @type {?} */\n    var _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: function () { return _location ? (_location.pathname + _location.search) : ''; }\n    };\n}\n/**\n * SVG attributes that accept a FuncIRI (e.g. `url(<something>)`).\n * @type {?}\n */\nvar funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nvar ɵ0 = function (attr) { return \"[\" + attr + \"]\"; };\n/**\n * Selector that can be used to find all elements that are using a `FuncIRI`.\n * @type {?}\n */\nvar funcIriAttributeSelector = funcIriAttributes.map(ɵ0).join(', ');\n/**\n * Regex that can be used to extract the id out of a FuncIRI.\n * @type {?}\n */\nvar funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nvar MatIcon = /** @class */ (function (_super) {\n    __extends(MatIcon, _super);\n    function MatIcon(elementRef, _iconRegistry, ariaHidden, _location) {\n        var _this = _super.call(this, elementRef) || this;\n        _this._iconRegistry = _iconRegistry;\n        _this._location = _location;\n        _this._inline = false;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n        return _this;\n    }\n    Object.defineProperty(MatIcon.prototype, \"inline\", {\n        /**\n         * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n         * the element the icon is contained in.\n         */\n        get: /**\n         * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n         * the element the icon is contained in.\n         * @return {?}\n         */\n        function () {\n            return this._inline;\n        },\n        set: /**\n         * @param {?} inline\n         * @return {?}\n         */\n        function (inline) {\n            this._inline = coerceBooleanProperty(inline);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatIcon.prototype, \"fontSet\", {\n        /** Font set that the icon is a part of. */\n        get: /**\n         * Font set that the icon is a part of.\n         * @return {?}\n         */\n        function () { return this._fontSet; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._fontSet = this._cleanupFontValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MatIcon.prototype, \"fontIcon\", {\n        /** Name of an icon within a font set. */\n        get: /**\n         * Name of an icon within a font set.\n         * @return {?}\n         */\n        function () { return this._fontIcon; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            this._fontIcon = this._cleanupFontValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @private\n     * @param {?} iconName\n     * @return {?}\n     */\n    MatIcon.prototype._splitIconName = /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @private\n     * @param {?} iconName\n     * @return {?}\n     */\n    function (iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        /** @type {?} */\n        var parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return (/** @type {?} */ (parts));\n            default: throw Error(\"Invalid icon name: \\\"\" + iconName + \"\\\"\");\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    MatIcon.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        if (changes.svgIcon) {\n            if (this.svgIcon) {\n                var _a = this._splitIconName(this.svgIcon), namespace = _a[0], iconName = _a[1];\n                this._iconRegistry.getNamedSvgIcon(iconName, namespace).pipe(take(1)).subscribe(function (svg) { return _this._setSvgElement(svg); }, function (err) { return console.log(\"Error retrieving icon: \" + err.message); });\n            }\n            else {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatIcon.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatIcon.prototype.ngAfterViewChecked = /**\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && this._location && cachedElements.size) {\n            /** @type {?} */\n            var newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    MatIcon.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatIcon.prototype._usingFontIcon = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        return !this.svgIcon;\n    };\n    /**\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    MatIcon.prototype._setSvgElement = /**\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    function (svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        /** @type {?} */\n        var styleTags = (/** @type {?} */ (svg.querySelectorAll('style')));\n        for (var i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        if (this._location) {\n            /** @type {?} */\n            var path = this._location.getPathname();\n            this._previousPath = path;\n            this._cacheChildrenWithExternalReferences(svg);\n            this._prependPathToReferences(path);\n        }\n        this._elementRef.nativeElement.appendChild(svg);\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatIcon.prototype._clearSvgElement = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var layoutElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        var childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            /** @type {?} */\n            var child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    };\n    /**\n     * @private\n     * @return {?}\n     */\n    MatIcon.prototype._updateFontIconClasses = /**\n     * @private\n     * @return {?}\n     */\n    function () {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        /** @type {?} */\n        var elem = this._elementRef.nativeElement;\n        /** @type {?} */\n        var fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    };\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    MatIcon.prototype._cleanupFontValue = /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    };\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     * @private\n     * @param {?} path\n     * @return {?}\n     */\n    MatIcon.prototype._prependPathToReferences = /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     * @private\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        /** @type {?} */\n        var elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach(function (attrs, element) {\n                attrs.forEach(function (attr) {\n                    element.setAttribute(attr.name, \"url('\" + path + \"#\" + attr.value + \"')\");\n                });\n            });\n        }\n    };\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    MatIcon.prototype._cacheChildrenWithExternalReferences = /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        /** @type {?} */\n        var elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        /** @type {?} */\n        var elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        var _loop_1 = function (i) {\n            funcIriAttributes.forEach(function (attr) {\n                /** @type {?} */\n                var elementWithReference = elementsWithFuncIri[i];\n                /** @type {?} */\n                var value = elementWithReference.getAttribute(attr);\n                /** @type {?} */\n                var match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    /** @type {?} */\n                    var attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    (/** @type {?} */ (attributes)).push({ name: attr, value: match[1] });\n                }\n            });\n        };\n        for (var i = 0; i < elementsWithFuncIri.length; i++) {\n            _loop_1(i);\n        }\n    };\n    MatIcon.decorators = [\n        { type: Component, args: [{template: '<ng-content></ng-content>',\n                    selector: 'mat-icon',\n                    exportAs: 'matIcon',\n                    styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1,1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\"],\n                    inputs: ['color'],\n                    host: {\n                        'role': 'img',\n                        'class': 'mat-icon',\n                        '[class.mat-icon-inline]': 'inline',\n                        '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                },] },\n    ];\n    /** @nocollapse */\n    MatIcon.ctorParameters = function () { return [\n        { type: ElementRef },\n        { type: MatIconRegistry },\n        { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_ICON_LOCATION,] }] }\n    ]; };\n    MatIcon.propDecorators = {\n        inline: [{ type: Input }],\n        svgIcon: [{ type: Input }],\n        fontSet: [{ type: Input }],\n        fontIcon: [{ type: Input }]\n    };\n    return MatIcon;\n}(_MatIconMixinBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar MatIconModule = /** @class */ (function () {\n    function MatIconModule() {\n    }\n    MatIconModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatIcon, MatCommonModule],\n                    declarations: [MatIcon],\n                },] },\n    ];\n    return MatIconModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { MatIconModule, MAT_ICON_LOCATION_FACTORY, MatIconBase, _MatIconMixinBase, MAT_ICON_LOCATION, MatIcon, getMatIconNameNotFoundError, getMatIconNoHttpProviderError, getMatIconFailedToSanitizeUrlError, getMatIconFailedToSanitizeLiteralError, ICON_REGISTRY_PROVIDER_FACTORY, MatIconRegistry, ICON_REGISTRY_PROVIDER };\n//# sourceMappingURL=icon.es5.js.map\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Camera } from '@ionic-native/camera/ngx';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NewClientPage } from './new-client.page';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { FullCalendarModule } from 'primeng/fullcalendar';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { SidebarModule } from 'primeng/sidebar';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { PhotoViewer } from '@ionic-native/photo-viewer/ngx';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\nimport { MessageService, DialogService } from 'primeng/api';\r\nimport { TagInputModule } from 'ngx-chips';\r\nimport {MenuModule} from 'primeng/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport {AutoCompleteModule} from 'primeng/autocomplete';\r\nimport { HeaderPage } from 'src/app/header/header.page';\r\nimport { HeadModule } from 'src/app/head/head.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NewClientPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ChartModule,\r\n    FullCalendarModule,\r\n    ButtonModule,\r\n    DropdownModule, \r\n    SidebarModule,\r\n    InputTextModule,\r\n    AccordionModule,\r\n    PasswordModule,\r\n    MessagesModule,\r\n    MessageModule,\r\n    BreadcrumbModule,\r\n    TabViewModule,\r\n    ToastModule,\r\n    DynamicDialogModule,\r\n    DialogModule,\r\n    TagInputModule,\r\n    MatIconModule,\r\n    MatChipsModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    RouterModule.forChild(routes),\r\n    MenuModule,\r\n    AutoCompleteModule,\r\n    HeadModule\r\n  ],\r\n  declarations: [NewClientPage ],\r\n  providers : [\r\n    DialogService ,\r\n    Camera, \r\n    Geolocation, \r\n    MessageService,\r\n    PhotoViewer\r\n  ]\r\n})\r\nexport class NewClientPageModule {}\r\n","module.exports = \"<ion-content>\\r\\n  <div class=\\\"container\\\">\\r\\n\\r\\n    <p-toast [style]=\\\"{marginTop: '80px'}\\\" position=\\\"top-right\\\" key=\\\"invalid\\\"></p-toast>\\r\\n\\r\\n    <!-- HEAD -->\\r\\n    <div class=\\\"head\\\">\\r\\n      <div class=\\\"back_button\\\">\\r\\n        <span>\\r\\n          <img (click)=\\\"open_menu()\\\" src=\\\"../../../assets/image/logo_itg.png\\\" />\\r\\n        </span>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"menu\\\">\\r\\n        <div class=\\\"list_icon\\\">\\r\\n          <i class=\\\"fas fa-at\\\"\\r\\n            style=\\\"color: white ;   margin-right: 10px; font-size: 20px ; font-size: 20px ; vertical-align: -webkit-baseline-middle\\\"></i>\\r\\n          <i class=\\\"fas fa-comments\\\"\\r\\n            style=\\\" color: white ;   margin-right: 10px; font-size: 20px ; font-size: 20px ; vertical-align: -webkit-baseline-middle\\\"></i>\\r\\n          <i class=\\\"fas fa-ban on fa-camera\\\"\\r\\n            style=\\\" color: white ;   margin-right: 10px; font-size: 20px ; font-size: 20px ; vertical-align: -webkit-baseline-middle\\\"></i>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n       <app-head></app-head>\\r\\n      \\r\\n    </div>\\r\\n    <!-- HEAD -->\\r\\n\\r\\n    <div class=\\\"body\\\">\\r\\n\\r\\n      <div class=\\\"title_body\\\">\\r\\n        <h3>\\r\\n          <div class=\\\"ui-g\\\">\\r\\n            <div (click)=\\\"open_fiche_client()\\\" class=\\\"ui-g-1\\\">\\r\\n              <i class=\\\"fas fa-arrow-left\\\" style=\\\"font-size: 18px ; color: #21B799\\\"> </i>\\r\\n            </div>\\r\\n            <div class=\\\"ui-g-11\\\">\\r\\n              <h3> Nouveau </h3>\\r\\n            </div>\\r\\n          </div>\\r\\n        </h3>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"btn_nw_cr\\\">\\r\\n        <button [disabled]=\\\"disable_save\\\" pButton type=\\\"submit\\\" label=\\\"SAUVEGARDER\\\" class=\\\"bt ui-button-success\\\"\\r\\n          (click)=\\\"save_new_client()\\\"></button>\\r\\n        <button pButton type=\\\"button\\\" label=\\\"ANNULER\\\" class=\\\"bt ui-button-secondary\\\"\\r\\n          (click)=\\\"open_fiche_client()\\\"></button>\\r\\n        <div *ngIf=\\\"loadIndicator\\\" class=\\\"loadIndicator\\\">\\r\\n          <ion-spinner name=\\\"dots\\\"></ion-spinner>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"breacumb ui-g\\\">\\r\\n\\r\\n        <div class=\\\"ui-g-4 dropdownworkflow\\\">\\r\\n          <!-- <button pButton type=\\\"button\\\" label=\\\"VALIDÉE PAR SUPERVISEUR\\\"  class=\\\"bt ui-button-secondary\\\"></button> \\r\\n           <p-dropdown [options]=\\\"itemsActions\\\" [(ngModel)]=\\\"selectedAction\\\" placeholder=\\\"ACTION\\\" optionLabel=\\\"label\\\"\\r\\n             [showClear]=\\\"true\\\"></p-dropdown> -->\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"ui-g-8 dropdownworkflow noCLick\\\">\\r\\n          <!-- <p-breadcrumb [model]=\\\"items\\\" [home]=\\\"home\\\"></p-breadcrumb> -->\\r\\n          <p-dropdown [options]=\\\"items\\\" [(ngModel)]=\\\"selectedWorkFlow\\\" placeholder=\\\"PROSPECT\\\" optionLabel=\\\"label\\\"\\r\\n            [showClear]=\\\"true\\\"></p-dropdown>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"archive  ui-g\\\">\\r\\n        <div class=\\\"ui-g-7\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <!-- <div class=\\\"div_btn ui-g-5\\\">\\r\\n                  <button pButton type=\\\"button\\\" icon=\\\"pi pi-folder\\\" iconPos=\\\"left\\\" label=\\\"ARCHIVER\\\"  class=\\\"bt ui-button-danger\\\"></button> -->\\r\\n        <!--<ul class=\\\"CustomArchive\\\">\\r\\n                   <li *ngIf=\\\"active == 0\\\" (click)=\\\"ConvertStatut(1)\\\">\\r\\n                     <i class=\\\"pi pi-folder\\\"></i>\\r\\n                     Actif\\r\\n                   </li>\\r\\n                   <li *ngIf=\\\"active == 1\\\" (click)=\\\"ConvertStatut(0)\\\">\\r\\n                     <i class=\\\"pi pi-folder\\\"></i>\\r\\n                     Inactif\\r\\n                   </li>\\r\\n                 </ul>\\r\\n             </div>-->\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"photo  ui-g\\\">\\r\\n        <div class=\\\"ui-g-9\\\">\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"cam ui-g-3\\\">\\r\\n          <div *ngIf=\\\"!filePath\\\"> <i class=\\\"pi pi-camera\\\" style=\\\"font-size: 100px ; color: gray\\\"></i> <br /></div>\\r\\n          <div *ngIf=\\\"filePath\\\" [style.background]=\\\"'url('+ filePath +')'\\\" [style.background-size]=\\\"cover\\\"\\r\\n            class=\\\"contentAvatar\\\" (click)=\\\"open_full_screen()\\\"></div>\\r\\n          <div class=\\\"del_mod_btn\\\">\\r\\n            <button pButton type=\\\"button\\\" icon=\\\"pi pi-pencil\\\" iconPos=\\\"center\\\" class=\\\"bt ui-button-success\\\"\\r\\n              (click)=\\\"showImageFromCamera()\\\"></button>\\r\\n            <button pButton type=\\\"button\\\" icon=\\\"pi pi-trash\\\" iconPos=\\\"center\\\" class=\\\"bt ui-button-danger\\\"\\r\\n              (click)=\\\"remove_image()\\\"></button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <!-- <div class=\\\"cam ui-g-3\\\" *ngIf = \\\"!filePath\\\" >\\r\\n               <i class=\\\"pi pi-camera\\\" style=\\\"font-size: 78px ; color: gray\\\" (click)=\\\"showImageFromCamera()\\\"></i> <br />\\r\\n             </div> -->\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"form\\\">\\r\\n        <form [formGroup]=\\\"fiche_client\\\" (ngSubmit)=\\\"save_new_client()\\\">\\r\\n          <div class=\\\"form_inside\\\">\\r\\n\\r\\n\\r\\n            <div class=\\\"form_item\\\">\\r\\n              <!--Organisation Commerciale-->\\r\\n              <h3>Organisation Commerciale</h3>\\r\\n\\r\\n              <div style=\\\"display: none;\\\">\\r\\n\\r\\n\\r\\n              </div>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label>Région</ion-label>\\r\\n                <ion-note slot=\\\"end\\\" color=\\\"primary\\\" style=\\\"font-size:medium; color: gray; font-weight: bold; \\\">\\r\\n                  {{my_region}}</ion-note>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label>Agence</ion-label>\\r\\n                <ion-note slot=\\\"end\\\" color=\\\"primary\\\" style=\\\"font-size:medium; color: gray; ; font-weight: bold; \\\">\\r\\n                  {{my_agence}}</ion-note>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Secteur</ion-label>\\r\\n                <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"(ionChange)=\\\"secteurChange($event.detail.value)\\\" [(ngModel)]=\\\"i_t_secteur_selected\\\"\\r\\n                  [value]=\\\"i_t_secteur_selected\\\" formControlName=\\\"secteur_id\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let secteur of i_t_secteur\\\" [value]=\\\"secteur.id\\\"> {{secteur.name}}\\r\\n                  </ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n\\r\\n              <!--Organisation Commerciale-->\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form_item\\\">\\r\\n              <!--Coordonnées du point de vente-->\\r\\n              <h3>Coordonnées du point de vente</h3>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Nom du PDV</ion-label>\\r\\n                <ion-input formControlName=\\\"nom_pos\\\" type=\\\"text\\\"> </ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Nom du Gérant</ion-label>\\r\\n                <ion-input formControlName=\\\"nom_gerant\\\" type=\\\"text\\\"> </ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Adresse</ion-label>\\r\\n                <ion-input formControlName=\\\"adresse\\\" type=\\\"text\\\"> </ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Repère</ion-label>\\r\\n                <ion-input formControlName=\\\"repere\\\" type=\\\"text\\\"> </ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Quartier</ion-label>\\r\\n                <ion-input formControlName=\\\"quartier\\\" type=\\\"text\\\"> </ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Ville</ion-label>\\r\\n                <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"ville_id\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let ville of i_t_ville\\\" [value]=\\\"ville.id\\\"> {{ville.name}}\\r\\n                  </ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">N° de téléphone 1</ion-label>\\r\\n                <ion-input formControlName=\\\"numero_telephone1\\\" type=\\\"text\\\"> </ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">N° de téléphone 2</ion-label>\\r\\n                <ion-input formControlName=\\\"numero_telephone2\\\" type=\\\"text\\\"> </ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">N° de téléphone 3</ion-label>\\r\\n                <ion-input formControlName=\\\"numero_telephone3\\\" type=\\\"text\\\"> </ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n              <!--Coordonnées du point de vente-->\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form_item\\\">\\r\\n              <!--Coordonnées complémentaire du Point de Vente-->\\r\\n              <h3>Coordonnées complémentaire du Point de Vente</h3>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Emplacement</ion-label>\\r\\n                <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"emplacement_id\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let emplacement of i_t_emplacement\\\" [value]=\\\"emplacement.id\\\">\\r\\n                    {{emplacement.name}}</ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Proximité</ion-label>\\r\\n                <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"proximite_id\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let proximite of i_t_proximite\\\" [value]=\\\"proximite.id\\\"> {{proximite.name}}\\r\\n                  </ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Type de quartier</ion-label>\\r\\n                <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"type_quartier_id\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let type_qurtier of i_t_type_quartier\\\" [value]=\\\"type_qurtier.id\\\">\\r\\n                    {{type_qurtier.name}}</ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n\\r\\n              <div class=\\\"gps\\\">\\r\\n                <button type=\\\"button\\\" (click)=\\\"getMyLocation()\\\" style=\\\"padding: 5px 10px;margin-top: 10px;\\\"><i\\r\\n                    class=\\\"fas fa-map-marker-alt\\\" style=\\\"font-size: 18px ; color: red;margin-right: 10px;\\\"></i>Récuperer\\r\\n                  ma position</button>\\r\\n                <p>Coordonnées GPS Latitude : <ion-input formControlName=\\\"provider_latitude\\\" type=\\\"text\\\"> </ion-input>\\r\\n                </p>\\r\\n                <p>Coordonnées GPS Longitude : <ion-input formControlName=\\\"provider_longitude\\\" type=\\\"text\\\"> </ion-input>\\r\\n                </p>\\r\\n              </div>\\r\\n\\r\\n\\r\\n              <!--Coordonnées complémentaire du Poin de Vente-->\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"form_item\\\">\\r\\n              <!--Typologie de Point de Vente-->\\r\\n              <h3>Typologie de Point de Vente</h3>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Type Client</ion-label>\\r\\n                <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"type_client_id\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let type_client of i_t_type_client\\\" [value]=\\\"type_client.id\\\">\\r\\n                    {{type_client.name}}</ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Activité PDV</ion-label>\\r\\n                <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"activite_pos_id\\\" (ionChange)=\\\"activite_pos_Change($event.detail.value)\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let activite_pos of i_t_activite_pos\\\" [value]=\\\"activite_pos.id\\\">\\r\\n                    {{activite_pos.name}}</ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item *ngIf=\\\"canal_result\\\">\\r\\n                <div *ngIf=\\\"canal_result.id\\\">\\r\\n                  <ion-label>Canal</ion-label>\\r\\n                  <ion-input disabled [value]=\\\"canal_result.name\\\"></ion-input>\\r\\n                </div>\\r\\n\\r\\n              </ion-item>\\r\\n\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Enseigne d'appartenance</ion-label>\\r\\n                <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"enseigne_appartenance_id\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let enseigne_appartenance of i_t_enseigne_appartenance\\\"\\r\\n                    [value]=\\\"enseigne_appartenance.id\\\"> {{enseigne_appartenance.name}}</ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Classification 1</ion-label>\\r\\n                <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"classification1_id\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let classification1 of i_t_classification1\\\" [value]=\\\"classification1.id\\\">\\r\\n                    {{classification1.name}}</ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Classification 2</ion-label>\\r\\n                <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"classification2_id\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let classification2 of i_t_classification2\\\" [value]=\\\"classification2.id\\\">\\r\\n                    {{classification2.name}}</ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n\\r\\n\\r\\n              <!--Typologie de Point de Vente-->\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form_item\\\">\\r\\n              <!--Couverture commerciale-->\\r\\n              <h3>Couverture commerciale</h3>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Couverture commerciale</ion-label>\\r\\n                <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"couverture_commerciale_id\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let couverture_commerciale of i_t_couverture_commerciale\\\"\\r\\n                    [value]=\\\"couverture_commerciale.id\\\"> {{couverture_commerciale.name}}</ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"floating\\\">Fréquence de visite</ion-label>\\r\\n                <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"frequence_visite_id\\\">\\r\\n                  <ion-select-option *ngFor=\\\"let frequence_visite of i_t_frequence_visite\\\"\\r\\n                    [value]=\\\"frequence_visite.id\\\"> {{frequence_visite.name}}</ion-select-option>\\r\\n                </ion-select>\\r\\n              </ion-item>\\r\\n\\r\\n              <!--Couverture commerciale-->\\r\\n            </div>\\r\\n\\r\\n\\r\\n\\r\\n            <!--ZAVATRA MITSIVALANA-->\\r\\n            <p-tabView>\\r\\n\\r\\n              <p-tabPanel header=\\\"AGENTS COMMERCIAUX\\\">\\r\\n                <ion-item>\\r\\n                  <tag-input formControlName=\\\"user_id\\\" [onlyFromAutocomplete]=\\\"true\\\" placeholder=\\\"User\\\"\\r\\n                    [ngModel]=users_same_secteur disable=\\\"true\\\">\\r\\n                    <tag-input-dropdown [autocompleteItems]=\\\"users_same_secteur\\\" [showDropdownIfEmpty]=\\\"true\\\"\\r\\n                      [dynamicUpdate]=\\\"false\\\"> </tag-input-dropdown>\\r\\n                  </tag-input>\\r\\n                </ion-item>\\r\\n\\r\\n              </p-tabPanel>\\r\\n\\r\\n              <p-tabPanel header=\\\"PERMANENT POSM\\\">\\r\\n\\r\\n\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Cible installation présentoirs</ion-label>\\r\\n                  <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"cible_installation_presentoirs_id\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let cible_installation_presentoirs of i_t_cible_installation_presentoirs\\\"\\r\\n                      [value]=\\\"cible_installation_presentoirs.id\\\"> {{cible_installation_presentoirs.name}}\\r\\n                    </ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <!--<ion-label position=\\\"floating\\\">Permanent POSM</ion-label>\\r\\n                           <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\" formControlName= \\\"permanent_POSM_id\\\" multiple=\\\"true\\\">\\r\\n                             <ion-select-option *ngFor = \\\"let posm1 of i_t_permanent_posm\\\" [value] = \\\"posm1.value\\\" > {{posm1.label}}</ion-select-option>\\r\\n                           </ion-select> -->\\r\\n                  <tag-input formControlName=\\\"permanent_POSM_id\\\" [onlyFromAutocomplete]=\\\"true\\\"\\r\\n                    placeholder=\\\"Permanent POSM\\\">\\r\\n                    <tag-input-dropdown [autocompleteItems]=\\\"i_t_permanent_posm\\\" [showDropdownIfEmpty]=\\\"true\\\"\\r\\n                      [dynamicUpdate]=\\\"false\\\"> </tag-input-dropdown>\\r\\n                  </tag-input>\\r\\n                </ion-item>\\r\\n\\r\\n                <!--<mat-form-field class=\\\"example-chip-list\\\">\\r\\n                     <mat-chip-list #chipList aria-label=\\\"posm selection\\\">\\r\\n                       <mat-chip *ngFor=\\\"let posm of posms\\\" [selectable]=\\\"selectable\\\" [removable]=\\\"removable\\\" (removed)=\\\"remove(posm)\\\"> {{posm.name}}\\r\\n                         <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n                       </mat-chip>\\r\\n                       <input placeholder=\\\"Permanent POSM\\\" #fruitInput formControlName=\\\"permanent_POSM_id\\\" [matAutocomplete]=\\\"auto\\\" [matChipInputFor]=\\\"chipList\\\" [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\" [matChipInputAddOnBlur]=\\\"addOnBlur\\\" (matChipInputTokenEnd)=\\\"add($event)\\\">\\r\\n                     </mat-chip-list>\\r\\n \\r\\n                     <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selected($event)\\\">\\r\\n                       <mat-option *ngFor=\\\"let posm of filteredPosm | async\\\" [value]=\\\"posm.id\\\">\\r\\n                         {{posm.name}}\\r\\n                       </mat-option>\\r\\n                     </mat-autocomplete>\\r\\n                   </mat-form-field> -->\\r\\n\\r\\n                <!--\\r\\n                       <ion-item>\\r\\n                           <ion-label position=\\\"floating\\\">Permanent POSM 2</ion-label>\\r\\n                           <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\" formControlName= \\\"permanent_POSM2_id\\\" >\\r\\n                             <ion-select-option *ngFor = \\\"let posm2 of i_t_permanent_posm\\\" [value] = \\\"posm2.id\\\" > {{posm2.name}}</ion-select-option>\\r\\n                           </ion-select>\\r\\n                       </ion-item>\\r\\n                     \\r\\n                       <ion-item>\\r\\n                           <ion-label position=\\\"floating\\\">Permanent POSM 3</ion-label>\\r\\n                           <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\" formControlName= \\\"permanent_POSM3_id\\\" >\\r\\n                             <ion-select-option *ngFor = \\\"let posm3 of i_t_permanent_posm\\\" [value] = \\\"posm3.id\\\" > {{posm3.name}}</ion-select-option>\\r\\n                           </ion-select>\\r\\n                       </ion-item>\\r\\n                     \\r\\n                       <ion-item>\\r\\n                           <ion-label position=\\\"floating\\\">Permanent POSM 4</ion-label>\\r\\n                           <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\" formControlName= \\\"permanent_POSM4_id\\\" >\\r\\n                             <ion-select-option *ngFor = \\\"let posm4 of i_t_permanent_posm\\\" [value] = \\\"posm4.id\\\" > {{posm4.name}}</ion-select-option>\\r\\n                           </ion-select>\\r\\n                       </ion-item>\\r\\n                     \\r\\n                       <ion-item>\\r\\n                           <ion-label position=\\\"floating\\\">Permanent POSM 5</ion-label>\\r\\n                           <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\" formControlName= \\\"permanent_POSM5_id\\\" >\\r\\n                             <ion-select-option *ngFor = \\\"let posm5 of i_t_permanent_posm\\\" [value] = \\\"posm5.id\\\" > {{posm5.name}}</ion-select-option>\\r\\n                           </ion-select>\\r\\n                       </ion-item>\\r\\n                     -->\\r\\n\\r\\n\\r\\n              </p-tabPanel>\\r\\n\\r\\n              <p-tabPanel header=\\\"CONTRAT\\\">\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Contrat</ion-label>\\r\\n                  <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"contrat_id\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let contrat of i_t_contrat\\\" [value]=\\\"contrat.id\\\">\\r\\n                      {{contrat.name}}</ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Date debut contrat</ion-label>\\r\\n                  <ion-datetime formControlName=\\\"date_debut_contrat\\\" display-format=\\\"YYYY-MM-DD\\\"\\r\\n                    picker-format=\\\"YYYY-MM-DD\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Date fin contrat</ion-label>\\r\\n                  <ion-datetime formControlName=\\\"date_fin_contrat\\\" display-format=\\\"YYYY-MM-DD\\\"\\r\\n                    picker-format=\\\"YYYY-MM-DD\\\"></ion-datetime>\\r\\n                </ion-item>\\r\\n              </p-tabPanel>\\r\\n\\r\\n              <p-tabPanel header=\\\"ACTIVATION\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Coopération ITG</ion-label>\\r\\n                  <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"cooperation_itg_id\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let cooperation_itg of i_t_cooperation_itg\\\" [value]=\\\"cooperation_itg.id\\\">\\r\\n                      {{cooperation_itg.name}}</ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Cible Activation</ion-label>\\r\\n                  <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"cible_activation_id\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let cible_activation of i_t_cible_activation\\\" [value]=\\\"cible_activation.id\\\">\\r\\n                      {{cible_activation.name}}</ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Activation autorisée</ion-label>\\r\\n                  <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"activation_autorisee_id\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let activation_autorisee of i_t_activation_autorisee\\\"\\r\\n                      [value]=\\\"activation_autorisee.id\\\"> {{activation_autorisee.name}}</ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Préférence animateur</ion-label>\\r\\n                  <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"preference_animateur_id\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let preference_animateur of i_t_preference_animateur\\\"\\r\\n                      [value]=\\\"preference_animateur.id\\\"> {{preference_animateur.name}}</ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n\\r\\n              </p-tabPanel>\\r\\n\\r\\n              <p-tabPanel header=\\\"APPROVISIONNEMENT\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Fréquence d'approvisionnement</ion-label>\\r\\n                  <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"frequence_approvisionnement_id\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let frequence_appro of i_t_frequence_approvisionnement\\\"\\r\\n                      [value]=\\\"frequence_appro.id\\\"> {{frequence_appro.name}}</ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n\\r\\n                <!--<ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Source d'approvisionnement</ion-label>\\r\\n                  <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"new_source_approvisionnement_id\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let source_appro of i_t_source_approvisionnement\\\"\\r\\n                      [value]=\\\"source_appro.id\\\"> {{source_appro.name}}</ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Fournisseur principal</ion-label>\\r\\n                  <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"new_fournisseur_principal_id\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let fornisseur_principale of i_t_fournisseur_principale\\\"\\r\\n                      [value]=\\\"fornisseur_principale.id\\\"> {{fornisseur_principale.name}}</ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Fournisseur secondaire</ion-label>\\r\\n                  <ion-select okText=\\\"Valider\\\" cancelText=\\\"Annuler\\\"formControlName=\\\"new_fournisseur_secondaire_id\\\">\\r\\n                    <ion-select-option *ngFor=\\\"let fournisseur_secondaire of i_t_fournisseur_secondaire\\\"\\r\\n                      [value]=\\\"fournisseur_secondaire.id\\\"> {{fournisseur_secondaire.name}}</ion-select-option>\\r\\n                  </ion-select>\\r\\n                </ion-item> -->\\r\\n\\r\\n                <div>\\r\\n                  <h6>Source d'approvisionnement</h6>\\r\\n                  <p-autoComplete class = \\\"atc\\\" formControlName=\\\"new_source_approvisionnement_id\\\" [suggestions]=\\\"filteredSourceAppro\\\"\\r\\n                    (completeMethod)=\\\"filterSourceAppro($event)\\\" field=\\\"name\\\" [size]=\\\"50\\\" [minLength]=\\\"1\\\" appendTo = \\\"body\\\">\\r\\n                  </p-autoComplete>\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                  <h6>Fournisseur principal</h6>\\r\\n                  <p-autoComplete class = \\\"atc\\\" formControlName=\\\"new_fournisseur_principal_id\\\" [suggestions]=\\\"filteredfournisseur_principal\\\"\\r\\n                    (completeMethod)=\\\"filterfournisseur_principal($event)\\\" field=\\\"name\\\" [size]=\\\"50\\\" [minLength]=\\\"1\\\" appendTo = \\\"body\\\">\\r\\n                  </p-autoComplete>\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                  <h6>Fournisseur secondaire</h6>\\r\\n                  <p-autoComplete class = \\\"atc\\\" formControlName=\\\"new_fournisseur_secondaire_id\\\" [suggestions]=\\\"filteredfournisseur_secondaire\\\"\\r\\n                    (completeMethod)=\\\"filterfournisseur_secondaire($event)\\\" field=\\\"name\\\" [size]=\\\"50\\\" [minLength]=\\\"1\\\" appendTo = \\\"body\\\">\\r\\n                  </p-autoComplete>\\r\\n                </div>\\r\\n\\r\\n              </p-tabPanel>\\r\\n\\r\\n            </p-tabView>\\r\\n\\r\\n            <!--ZAVATRA MITSIVALANA-->\\r\\n\\r\\n\\r\\n            <!--Commentaire-->\\r\\n\\r\\n            <ion-item>\\r\\n              <ion-label position=\\\"floating\\\">Commentaires</ion-label>\\r\\n              <ion-textarea formControlName=\\\"commentaire\\\"></ion-textarea>\\r\\n            </ion-item>\\r\\n\\r\\n            <!--Commentaire-->\\r\\n\\r\\n\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"footer\\\">\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <p-dialog [(visible)]=\\\"display_2\\\" [modal]=\\\"true\\\" [responsive]=\\\"true\\\" styleClass=\\\"mydialog\\\" appendTo=\\\"body\\\">\\r\\n    <ion-img [src]=\\\"filePath\\\"> </ion-img>\\r\\n  </p-dialog>\\r\\n\\r\\n</ion-content>\"","module.exports = \".body {\\n  width: 100%;\\n  height: 100%;\\n  background-color: white; }\\n\\nh3 {\\n  font-size: 22px;\\n  color: gray;\\n  margin-left: 4px;\\n  margin-top: 0;\\n  margin-bottom: 0px; }\\n\\n.btn_nw_cr {\\n  margin-left: 6px; }\\n\\n.bt {\\n  margin-left: 2px; }\\n\\n.title_body {\\n  margin-top: 0px;\\n  padding-top: 13px;\\n  height: 48px;\\n  padding-bottom: 13px; }\\n\\n.archive {\\n  height: 48px;\\n  background-color: #E2E2E0; }\\n\\n.div_btn {\\n  text-align: -webkit-right; }\\n\\n.form {\\n  width: 100%;\\n  height: 100%;\\n  background-color: white; }\\n\\n.cam {\\n  text-align: -webkit-center;\\n  width: 100px;\\n  display: block;\\n  border: 1px solid gray; }\\n\\n.photo {\\n  width: 98%;\\n  margin-top: 8px; }\\n\\n.form_item {\\n  margin-bottom: 30px;\\n  margin-right: 14px; }\\n\\n.form_inside {\\n  width: 98%;\\n  margin-left: 1%;\\n  margin-right: 1%; }\\n\\n.gps {\\n  margin-top: 2px;\\n  margin-left: 10px; }\\n\\np.canal {\\n  font-weight: bold;\\n  color: #21B799; }\\n\\n.example-chip-list {\\n  width: 100%; }\\n\\n:host ::ng-deep .ui-autocomplete .ui-autocomplete-input {\\n  border-radius: 0px !important;\\n  border-top: 0px !important;\\n  border-left: 0px !important;\\n  border-right: 0px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FuZHJpYW1hbmFqYS9Eb2N1bWVudHMvaW9uaWMgcHJvamVjdC9rcm9ub3NfbWcvc3JjL2FwcC9jbGllbnRzL25ldy1jbGllbnQvbmV3LWNsaWVudC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFXO0VBQ1gsWUFBWTtFQUNaLHVCQUF1QixFQUFBOztBQUUzQjtFQUNJLGVBQWU7RUFDZixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxnQkFDSixFQUFBOztBQUVBO0VBQ0ksZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1osb0JBQW9CLEVBQUE7O0FBR3hCO0VBQ0ksWUFBWTtFQUNaLHlCQUNKLEVBQUE7O0FBRUE7RUFDSSx5QkFBeUIsRUFBQTs7QUFHN0I7RUFDSSxXQUFXO0VBQ1gsWUFBWTtFQUNaLHVCQUF1QixFQUFBOztBQUczQjtFQUNJLDBCQUEwQjtFQUMxQixZQUFZO0VBQ1osY0FBYztFQUNkLHNCQUNKLEVBQUE7O0FBRUE7RUFDSSxVQUFVO0VBQ1YsZUFBZSxFQUFBOztBQUduQjtFQUNJLG1CQUFtQjtFQUNuQixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSxVQUFVO0VBQ1YsZUFBZTtFQUNmLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGVBQWU7RUFDZixpQkFBaUIsRUFBQTs7QUFHckI7RUFDSSxpQkFBaUI7RUFDakIsY0FBYyxFQUFBOztBQUVsQjtFQUNJLFdBQ0osRUFBQTs7QUFNQTtFQUNJLDZCQUE2QjtFQUM3QiwwQkFBMEI7RUFDMUIsMkJBQTRCO0VBQzVCLDRCQUE2QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvY2xpZW50cy9uZXctY2xpZW50L25ldy1jbGllbnQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvZHl7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcbmgze1xyXG4gICAgZm9udC1zaXplOiAyMnB4O1xyXG4gICAgY29sb3I6IGdyYXk7XHJcbiAgICBtYXJnaW4tbGVmdDogNHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDBweDtcclxufVxyXG5cclxuLmJ0bl9ud19jcntcclxuICAgIG1hcmdpbi1sZWZ0OiA2cHg7XHJcbn1cclxuXHJcbi5idHtcclxuICAgIG1hcmdpbi1sZWZ0IDogMnB4XHJcbn1cclxuXHJcbi50aXRsZV9ib2R5e1xyXG4gICAgbWFyZ2luLXRvcDogMHB4O1xyXG4gICAgcGFkZGluZy10b3A6IDEzcHg7XHJcbiAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMTNweDtcclxufVxyXG5cclxuLmFyY2hpdmV7XHJcbiAgICBoZWlnaHQ6IDQ4cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTJFMkUwXHJcbn1cclxuXHJcbi5kaXZfYnRuIHtcclxuICAgIHRleHQtYWxpZ246IC13ZWJraXQtcmlnaHQ7XHJcbn1cclxuXHJcbi5mb3JtIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5jYW0ge1xyXG4gICAgdGV4dC1hbGlnbjogLXdlYmtpdC1jZW50ZXI7XHJcbiAgICB3aWR0aDogMTAwcHg7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGdyYXlcclxufVxyXG5cclxuLnBob3RvIHtcclxuICAgIHdpZHRoOiA5OCU7XHJcbiAgICBtYXJnaW4tdG9wOiA4cHg7XHJcbn1cclxuXHJcbi5mb3JtX2l0ZW0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICAgIG1hcmdpbi1yaWdodDogMTRweDtcclxufVxyXG5cclxuLmZvcm1faW5zaWRlIHtcclxuICAgIHdpZHRoOiA5OCU7XHJcbiAgICBtYXJnaW4tbGVmdDogMSU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDElO1xyXG59XHJcblxyXG4uZ3BzIHtcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG59XHJcblxyXG5wLmNhbmFsIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgY29sb3I6ICMyMUI3OTk7XHJcbn1cclxuLmV4YW1wbGUtY2hpcC1saXN0e1xyXG4gICAgd2lkdGg6IDEwMCVcclxufVxyXG5cclxuLmF0YyB7XHJcbiAgIFxyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLnVpLWF1dG9jb21wbGV0ZSAudWktYXV0b2NvbXBsZXRlLWlucHV0IHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDBweCAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyLXRvcDogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXItbGVmdCA6IDBweCAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyLXJpZ2h0IDogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\nimport { Router, Event, NavigationStart, NavigationEnd, ActivatedRoute, NavigationExtras } from '@angular/router';\r\nimport { AlertController, ToastController, LoadingController } from '@ionic/angular';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Database_manager } from '../../model/DAO/database_manager.model';\r\nimport { Storage } from '@ionic/storage';\r\nimport { i_t_region } from '../../model/data/i_t_region.model';\r\nimport { i_t_activation_autorisee } from '../../model/data/i_t_activation_autorisee.model';\r\nimport { i_t_cible_activation } from '../../model/data/i_t_cible_activation.model';\r\nimport { i_t_cible_installation_presentoirs } from '../../model/data/i_t_cible_installation_presentoirs.model';\r\nimport { i_t_activite_pos } from '../../model/data/i_t_activite_pos.model';\r\nimport { i_t_agence } from '../../model/data/i_t_agence.model';\r\nimport { i_t_classification1 } from '../../model/data/i_t_classification1.model';\r\nimport { i_t_classification2 } from '../../model/data/i_t_classification2.model';\r\nimport { i_t_contrat } from '../../model/data/i_t_contrat.model';\r\nimport { i_t_cooperation_itg } from '../../model/data/i_t_cooperation_itg.model';\r\nimport { i_t_couverture_commerciale } from '../../model/data/i_t_couverture_commerciale.model';\r\nimport { i_t_emplacement } from '../../model/data/i_t_emplacement.model';\r\nimport { i_t_enseigne_appartenance } from '../../model/data/i_t_enseigne_appartenance.model';\r\nimport { i_t_frequence_approvisionnement } from '../../model/data/i_t_frequence_approvisionnement.model';\r\nimport { i_t_frequence_visite } from '../../model/data/i_t_frequence_visite.model';\r\n\r\nimport { i_t_preference_animateur } from '../../model/data/it_preference_animateur.model';\r\nimport { i_t_proximite } from '../../model/data/i_t_proximite.model';\r\nimport { i_t_secteur } from '../../model/data/i_t_secteur.model';\r\nimport { i_t_type_client } from '../../model/data/i_t_type_client.model';\r\nimport { i_t_type_quartier } from '../../model/data/i_t_type_quartier.model';\r\nimport { i_t_ville } from '../../model/data/i_t_ville.model';\r\nimport { i_t_zone } from '../../model/data/i_t_zone.model';\r\nimport { res_users } from '../../model/data/res_users.model';\r\nimport { i_t_canal } from 'src/app/model/data/i_t_canal.model';\r\nimport { FullScreenImage } from '@ionic-native/full-screen-image/ngx';\r\nimport { Auth } from 'src/app/model/helper/auth';\r\nimport { Base64 } from '@ionic-native/base64/ngx';\r\n\r\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface name_id {\r\n  value: any;\r\n  display: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-new-client',\r\n  templateUrl: './new-client.page.html',\r\n  styleUrls: ['./new-client.page.scss'],\r\n})\r\n\r\n\r\n\r\nexport class NewClientPage implements OnInit {\r\n\r\n  disable_save : boolean = false ;\r\n  photo: String;\r\n  itemes: MenuItem[];\r\n  items: Array<MenuItem>;\r\n  itemsActions: Array<MenuItem>;\r\n  home: any;\r\n  base64Image: any;\r\n  fiche_client: FormGroup;\r\n  i_t_activation_autorisee: Array<i_t_activation_autorisee> = [];\r\n  i_t_cible_activation: Array<i_t_cible_activation> = [];\r\n  i_t_cible_installation_presentoirs: Array<i_t_cible_installation_presentoirs> = [];\r\n  i_t_activite_pos: Array<i_t_activite_pos> = [];\r\n  i_t_agence: Array<i_t_agence> = [];\r\n  i_t_agence_filtered: Array<i_t_agence> = [];\r\n  i_t_classification1: Array<i_t_classification1> = [];\r\n  i_t_classification2: Array<i_t_classification2> = [];\r\n  i_t_contrat: Array<i_t_contrat> = [];\r\n  i_t_cooperation_itg: Array<i_t_cooperation_itg> = [];\r\n  i_t_couverture_commerciale: Array<i_t_couverture_commerciale> = [];\r\n  i_t_emplacement: Array<i_t_emplacement> = [];\r\n  i_t_enseigne_appartenance: Array<i_t_enseigne_appartenance> = [];\r\n  i_t_frequence_approvisionnement: Array<i_t_frequence_approvisionnement> = [];\r\n  i_t_frequence_visite: Array<i_t_frequence_visite> = [];\r\n  i_t_permanent_posm: Array<name_id> = [];\r\n  i_t_preference_animateur: Array<i_t_preference_animateur> = [];\r\n  i_t_proximite: Array<i_t_proximite> = [];\r\n  i_t_secteur: Array<i_t_secteur> = [];\r\n  i_t_type_client: Array<i_t_type_client> = [];\r\n  i_t_type_quartier: Array<i_t_type_quartier> = [];\r\n  i_t_ville: Array<i_t_ville> = [];\r\n  i_t_zone: Array<i_t_zone> = [];\r\n  i_t_fournisseur_secondaire: Array<name_id> = [];\r\n  i_t_fournisseur_principale: Array<name_id> = [];\r\n  i_t_region: Array<i_t_region> = [];\r\n  i_t_source_approvisionnement: Array<name_id>;\r\n  i_t_zone_filtered: Array<i_t_zone> = [];\r\n  i_t_secteur_filtered: Array<i_t_secteur> = [];\r\n  i_t_canal: Array<i_t_canal> = [];\r\n  i_t_canal_filtered: Array<i_t_canal> = [];\r\n  res_user: Array<name_id>;\r\n  users_same_secteur: Array<name_id> = [];\r\n  display_2: boolean = false;\r\n  selectedWorkFlow: any;\r\n  signature: string;\r\n  invalid_fields = [];\r\n  canal: string = \"\";\r\n  id_contrat: number = 0;\r\n  filePath: string;\r\n  window: any = window;\r\n  display: boolean = false;\r\n  max: number;\r\n  cover: string = \"cover\";\r\n  loadIndicator: boolean = false;\r\n  canal_result: any;\r\n\r\n  my_region: any;\r\n  my_secteur: any;\r\n  my_agence: any;\r\n\r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n  filteredPosm: Observable<name_id[]>;\r\n  posms: name_id[];\r\n\r\n  resp: any;\r\n\r\n  i_t_secteur_selected: any;\r\n  i_t_agence_selected: any;\r\n  i_t_region_selected: any;\r\n\r\n  filteredSourceAppro : any ;\r\n  filteredfournisseur_principal : any ;\r\n  filteredfournisseur_secondaire : any ;\r\n  color_icon: any;\r\n  items_sync: MenuItem[];\r\n  navigationExtras: NavigationExtras = {\r\n    queryParams: {\r\n      \"color\": String,\r\n      \"unsynced\": String\r\n    }\r\n  };\r\n  load2 : any ;\r\n\r\n  constructor(private loadingController : LoadingController, private alertController : AlertController, private load: LoadingController, private b64: Base64, private actRoute: ActivatedRoute, private fullScreenImage: FullScreenImage, private storage: Storage, private messageService: MessageService, private toast: ToastController, private dbm: Database_manager, private form_builder: FormBuilder, private router: Router, private camera: Camera, private geolocation: Geolocation, private alert: AlertController) {\r\n\r\n    this.router.events.subscribe((routerEvent: Event) => {\r\n      if (routerEvent instanceof NavigationStart) {\r\n        this.loadIndicator = true;\r\n      }\r\n      if (routerEvent instanceof NavigationEnd) {\r\n        this.loadIndicator = false;\r\n      }\r\n    });\r\n\r\n\r\n    \r\n  }\r\n\r\n  go_sync() {\r\n\t\tthis.dbm.verify_data().then(data => {\r\n      this.navigationExtras.queryParams = {\r\n        \"color\" : data.color ,\r\n        \"unsynced\" : data.non_synced\r\n      }\r\n      this.router.navigate([\"synchro\"], this.navigationExtras)\r\n    });\r\n\t}\r\n\r\n  async ionViewWillEnter() {\r\n    let date = new Date() ;\r\n\r\n    this.load2 = await this.loadingController.create({\r\n      message : \"Veuillez patienter ....\"\r\n    }) ;\r\n\r\n    this.charge_data();\r\n    //this.charge_data_2() ;\r\n  }\r\n\r\n  charge_data() {\r\n    this.dbm.select_basic_data_2(\"i_t_type_client\").then(data => {\r\n      this.i_t_type_client = data;\r\n    });\r\n\r\n    this.dbm.get_mes_villes().then(villes => {\r\n      this.i_t_ville = villes ;\r\n    })\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_emplacement\").then(data => {\r\n      this.i_t_emplacement = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_proximite\").then(data => {\r\n      this.i_t_proximite = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_type_quartier\").then(data => {\r\n      this.i_t_type_quartier = data;\r\n    });\r\n\r\n    this.dbm.select_i_t_type_client().then(data => {\r\n      this.i_t_source_approvisionnement = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data(\"i_t_activite_pos\").then(data => {\r\n      this.i_t_activite_pos = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_enseigne_appartenance\").then(data => {\r\n      this.i_t_enseigne_appartenance = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_classification1\").then(data => {\r\n      this.i_t_classification1 = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_classification2\").then(data => {\r\n      this.i_t_classification2 = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_couverture_commerciale\").then(data => {\r\n      this.i_t_couverture_commerciale = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_frequence_visite\").then(data => {\r\n      this.i_t_frequence_visite = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_canal\").then(data => {\r\n      this.i_t_canal = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_cible_installation_presentoirs\").then(data => {\r\n      this.i_t_cible_installation_presentoirs = data;\r\n    });\r\n\r\n    this.dbm.select_data_with_table_name(\"i_t_permanent_posm\").then(data => {\r\n      this.i_t_permanent_posm = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_cooperation_itg\").then(data => {\r\n      this.i_t_cooperation_itg = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_activation_autorisee\").then(data => {\r\n      this.i_t_activation_autorisee = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_preference_animateur\").then(data => {\r\n      this.i_t_preference_animateur = data;\r\n    });\r\n\r\n    /*this.dbm.select_basic_data_2(\"i_t_cible_activation\").then(data => {\r\n      this.i_t_cible_activation = data;\r\n    });*/\r\n\r\n    this.dbm.select_basic_data_3(\"i_t_cible_activation\").then(data => {\r\n      this.i_t_cible_activation = data;\r\n    });\r\n\r\n    this.dbm.select_basic_data_2(\"i_t_frequence_approvisionnement\").then(data => {\r\n      this.i_t_frequence_approvisionnement = data;\r\n    });\r\n\r\n    this.dbm.get_name_id_fournisseur(null).then(data => {\r\n      this.i_t_fournisseur_principale = data;\r\n      this.i_t_fournisseur_secondaire = data;\r\n      //this.i_t_source_approvisionnement = data;\r\n    });\r\n  }\r\n\r\n  charge_data_2() {\r\n    this.actRoute.data.subscribe(( details : {data :any}) => {\r\n      console.log(\"details ==> \" , details) ;\r\n      this.i_t_region = details.data.i_t_region;\r\n      this.i_t_permanent_posm = details.data.i_t_permanent_posm;\r\n      this.res_user = details.data.res_users;\r\n      this.i_t_agence = details.data.i_t_agence;\r\n      //this.i_t_zone = details.data.i_t_zone ;\r\n      this.i_t_activite_pos = details.data.i_t_activite_pos;\r\n      this.i_t_activation_autorisee = details.data.i_t_activation_autorisee ;\r\n      this.i_t_cible_activation = details.data.i_t_cible_activation;\r\n      this.i_t_cible_installation_presentoirs = details.data.i_t_cible_installation_presentoirs;\r\n      this.i_t_classification1 = details.data.i_t_classification1;\r\n      this.i_t_classification2 = details.data.i_t_classification2 ;\r\n      this.i_t_contrat = details.data.i_t_contrat;\r\n      this.i_t_cooperation_itg = details.data.i_t_cooperation_itg;\r\n      this.i_t_couverture_commerciale = details.data.i_t_couverture_commerciale;\r\n      this.i_t_emplacement = details.data.i_t_emplacement ;\r\n      this.i_t_enseigne_appartenance = details.data.i_t_enseigne_appartenance ;\r\n      this.i_t_frequence_approvisionnement = details.data.i_t_frequence_approvisionnement;\r\n      this.i_t_frequence_visite = details.data.i_t_frequence_visite;\r\n      this.i_t_preference_animateur = details.data.i_t_preference_animateur ;\r\n      this.i_t_proximite = details.data.i_t_proximite;\r\n      this.i_t_secteur = details.data.i_t_secteur ;\r\n      this.i_t_type_client = details.data.i_t_type_client ;\r\n      this.i_t_type_quartier = details.data.i_t_type_quartier ;\r\n      this.i_t_ville = details.data.i_t_ville ;\r\n      this.i_t_source_approvisionnement = details.data.i_t_fournisseur ;\r\n      this.i_t_canal = details.data.i_t_canal ;\r\n      this.i_t_fournisseur_principale = details.data.i_t_fournisseur ;\r\n      this.i_t_fournisseur_secondaire = details.data.i_t_fournisseur ;\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.dbm.get_reg_sec_ag().then(data => {\r\n      if (data) {\r\n        this.i_t_agence = data[0].agence;\r\n        this.i_t_region = data[0].region;\r\n        this.i_t_secteur = data[0].secteur;\r\n\r\n        this.my_agence = this.i_t_agence[0].name ;\r\n        this.my_region = this.i_t_region[0].name ;\r\n      }\r\n    });\r\n\r\n\r\n    this.actRoute.queryParams.subscribe(data => {\r\n      this.color_icon = data [\"color\"] ;\r\n      this.itemes = [\r\n        {label: 'Déconnecter', icon: 'pi pi-fw pi-plus'}, \r\n      ];\r\n\r\n      this.items_sync = [\r\n        {label: data['unsynced']}, \r\n      ];\r\n    })\r\n\r\n    this.itemes = [\r\n      { label: 'Déconnecter', icon: 'pi pi-fw pi-plus' },\r\n    ];\r\n    this.items = [\r\n      { label: 'PROSPECT' },\r\n      { label: 'VALIDÉE PAR SUPERVISEUR' },\r\n      { label: 'VALIDÉE PAR ADMINISTRATEUR' },\r\n    ];\r\n    this.itemsActions = [\r\n      { label: 'VALIDÉE PAR SUPERVISEUR' },\r\n      { label: 'VALIDÉE PAR ADMINISTRATEUR' },\r\n    ];\r\n\r\n    this.fiche_client = this.form_builder.group({\r\n      name: [''],\r\n      region_id: ['', Validators.required],\r\n      agence_id: ['', Validators.required],\r\n      //zone_id: [''],\r\n      secteur_id: ['', Validators.required],\r\n\r\n      nom_pos: ['', Validators.required],\r\n      nom_gerant: ['', Validators.required],\r\n      adresse: ['', Validators.required],\r\n      repere: ['', Validators.required],\r\n      quartier: [''],\r\n      ville_id: ['', Validators.required],\r\n      numero_telephone1: [''],\r\n      numero_telephone2: [''],\r\n      numero_telephone3: [''],\r\n\r\n      emplacement_id: ['', Validators.required],\r\n      proximite_id: ['', Validators.required],\r\n      type_quartier_id: ['', Validators.required],\r\n\r\n      provider_latitude: ['', Validators.required],\r\n      provider_longitude: ['', Validators.required],\r\n\r\n      type_client_id: ['', Validators.required],\r\n      activite_pos_id: [''],\r\n      enseigne_appartenance_id: ['', Validators.required],\r\n      classification1_id: ['', Validators.required],\r\n      classification2_id: ['', Validators.required],\r\n\r\n      couverture_commerciale_id: ['', Validators.required],\r\n      frequence_visite_id: [''],\r\n\r\n      user_id: [''],\r\n      canal_id: [''],\r\n\r\n      photo_uri: [''],\r\n      photo: ['', Validators.required],\r\n\r\n      cible_installation_presentoirs_id: ['', Validators.required],\r\n      permanent_POSM_id: [''],\r\n\r\n      contrat_id: [''],\r\n      date_debut_contrat: [''],\r\n      date_fin_contrat: [''],\r\n\r\n      cooperation_itg_id: ['', Validators.required],\r\n      cible_activation_id: ['', Validators.required],\r\n      activation_autorisee_id: ['', Validators.required],\r\n      preference_animateur_id: ['', Validators.required],\r\n\r\n      frequence_approvisionnement_id: ['', Validators.required],\r\n      new_source_approvisionnement_id: [''],\r\n      new_fournisseur_principal_id: [''],\r\n      new_fournisseur_secondaire_id: [''],\r\n\r\n      visite: [''],\r\n\r\n      commentaire: [''],\r\n      state: ['']\r\n    });\r\n\r\n    this.fiche_client.controls['region_id'].disable();\r\n    this.fiche_client.controls['agence_id'].disable();\r\n\r\n  }\r\n\r\n  async takePicture() {\r\n    let cameraOptions: CameraOptions = {\r\n      quality: 100,\r\n      destinationType: this.camera.DestinationType.FILE_URI,\r\n      encodingType: this.camera.EncodingType.JPEG,\r\n      mediaType: this.camera.MediaType.PICTURE,\r\n      targetHeight: 1024,\r\n      targetWidth: 1024,\r\n      cameraDirection: 1,\r\n      correctOrientation: true,\r\n    };\r\n    const imagePath: string = await this.camera.getPicture(cameraOptions);\r\n    this.fiche_client.controls['photo_uri'].setValue(this.window.Ionic.WebView.convertFileSrc(imagePath));\r\n    if (this.window.Ionic.WebView.convertFileSrc(imagePath).includes(\"http://localhost/_app_file_/\") == true) {\r\n      this.b64.encodeFile(this.window.Ionic.WebView.convertFileSrc(imagePath).replace(\"http://localhost/_app_file_/\", \"file:///\")).then(result => {\r\n        result = result.split(',')[1];\r\n        this.photo = result;\r\n        this.fiche_client.controls['photo'].setValue(result);\r\n      });\r\n    }\r\n    return this.window.Ionic.WebView.convertFileSrc(imagePath);\r\n  }\r\n\r\n  async showImageFromCamera() {\r\n    try {\r\n      this.filePath = await this.takePicture();\r\n    } catch (error) {\r\n      this.fiche_client.controls['canal_id']\r\n    }\r\n  }\r\n\r\n  async getMyLocation() {\r\n\r\n    var options = {\r\n      enableHighAccuracy: true,\r\n      timeout: 60000,\r\n      maximumAge: 0\r\n    };\r\n\r\n    let loading = await this.load.create({\r\n      duration: 6000\r\n    });\r\n    loading.present();\r\n\r\n    await this.geolocation.getCurrentPosition(options).then(async (resp) => {\r\n      this.resp = resp.coords;\r\n      if(resp.coords.longitude && resp.coords.longitude) {\r\n        this.fiche_client.controls['provider_longitude'].setValue(resp.coords.longitude);\r\n        this.fiche_client.controls['provider_latitude'].setValue(resp.coords.latitude);\r\n      }\r\n      else {\r\n        const alert = await this.alertController.create({\r\n          message: 'Merci de vérifier si le GPS est activé et/ou changer de position.',\r\n          buttons: ['OK']\r\n        });\r\n  \r\n        await alert.present();\r\n      }\r\n      loading.dismiss();\r\n    }).catch(async (error) => {\r\n      const alert = await this.alertController.create({\r\n        message: 'Merci de vérifier si le GPS est activé et/ou changer de position.',\r\n        buttons: ['OK']\r\n      });\r\n\r\n      await alert.present();\r\n    });\r\n  }\r\n\r\n  open_fiche_client() {\r\n    this.router.navigate(['fiches-client'], this.navigationExtras);\r\n  }\r\n\r\n  async make_alert(message) {\r\n    let x = await this.alert.create({\r\n      message: message,\r\n      header: \"test\",\r\n    });\r\n    x.present();\r\n  }\r\n\r\n  async make_toast(message) {\r\n    let x = await this.toast.create({\r\n      message: message,\r\n      duration: 3000\r\n    });\r\n    x.present();\r\n  }\r\n\r\n  save_new_client() {\r\n\r\n    this.disable_save = true ;\r\n    this.load2.present() ;\r\n\r\n    this.fiche_client.controls['contrat_id'].setValue(null);\r\n    if (this.fiche_client.invalid) {\r\n      let invalid = '';\r\n      for (const name in this.fiche_client.controls) {\r\n        if (this.fiche_client.controls[name].invalid) {\r\n          if(name == \"provider_latitude\" || name == \"provider_longitude\" || name == \"photo\") {\r\n            if(name == \"provider_latitude\") {\r\n              invalid = '\\n' + invalid + \"Coordonnées GPS latitude\" + '\\n'\r\n            }\r\n\r\n            if(name == \"provider_longitude\") {\r\n              invalid = '\\n' + invalid + \" - Coordonnées GPS longitude\" + '\\n'\r\n            }\r\n\r\n            if(name == \"photo\") {\r\n              invalid = '\\n' + invalid + \" - Photo\" + '\\n'\r\n            }\r\n            \r\n          }\r\n          else {\r\n          let named = name.charAt(0).toUpperCase() + name.slice(1);\r\n          named = named.replace(/_|(id)/gi, function (a) { return ' '; });\r\n          invalid = '\\n' + invalid + ' - ' + named + '\\n';\r\n        }\r\n      }\r\n    }\r\n      this.messageService.add({ severity: 'error', summary: 'Les champs suivants sont incorrects : ', detail: invalid, key: 'invalid' });\r\n      this.load2.dismiss() ;\r\n      this.disable_save = false ;\r\n    }\r\n\r\n\r\n    else {\r\n      let state = 'brouillon'\r\n      //this.fiche_client.controls['photo'].setValue(this.photo);\r\n      this.fiche_client.controls['name'].setValue(\"/\");\r\n      this.fiche_client.controls['visite'].setValue(null);\r\n      this.fiche_client.controls['state'].setValue(state.trim());\r\n\r\n      this.fiche_client.controls['new_source_approvisionnement_id'].setValue(this.fiche_client.get('new_source_approvisionnement_id').value.id);\r\n      this.fiche_client.controls['new_fournisseur_principal_id'].setValue(this.fiche_client.get('new_fournisseur_principal_id').value.id);\r\n      this.fiche_client.controls['new_fournisseur_secondaire_id'].setValue(this.fiche_client.get('new_fournisseur_secondaire_id').value.id);\r\n\r\n\r\n      let q1 = \"insert into res_partner \";\r\n      let q2 = \"\";\r\n      let q3 = \"\";\r\n      let keys = Object.keys(this.fiche_client.value);\r\n      let values = Object.values(this.fiche_client.value)\r\n      for (var i = 0; i < keys.length - 1; i++) {\r\n\r\n        if (values[i] == \"\" || values[i] == null || values[i] == undefined) {\r\n          values[i] = \"NULL\";\r\n        }\r\n\r\n        if (keys[i].trim() == \"contrat_id\" || keys[i].trim() == \"date_debut_contrat\" || keys[i].trim() == \"date_fin_contrat\" || keys[i].trim() == \"user_id\" || keys[i].trim() == \"permanent_POSM_id\") {\r\n          i++;\r\n        }\r\n\r\n        else {\r\n          q2 += keys[i] + \" ,\";\r\n          if (typeof (values[i]) == \"string\") {\r\n            q3 += \"\\\"\" + this.remove_special_charachter(values[i]) + \"\\\",\";\r\n          }\r\n          \r\n          else {\r\n            q3 += \"'\" + values[i] + \"' ,\";\r\n          }\r\n        }\r\n      }\r\n\r\n      let query = q1 + \" ( \" + q2 + keys[keys.length - 1] + \" , canal_id, region_id, agence_id, active) values (\" + q3 + \" \\\"\" + values[values.length - 1] + \"\\\" , \" + this.fiche_client.get('canal_id').value + \", \" + this.i_t_region[0].id + \" , \" + this.i_t_agence[0].id + \", 0)\";\r\n      let query2 = \"insert into i_t_contrat (date_debut_contrat, date_fin_contrat) values ('\" + this.fiche_client.get('date_debut_contrat').value + \"' ,'\" + this.fiche_client.get('date_debut_contrat').value + \"' )\";\r\n      //let query5 = \"insert into data_for_sync (table_name, is_synced, table_id, action_type, type) values (\\\"res_partner\\\", 0, (select max (id) + 1 from res_partner ), 1,\\\"insert\\\")\";\r\n\r\n\r\n      if (this.fiche_client.get('user_id').value.length > 0) {\r\n\r\n        for (var i = 0; i < this.fiche_client.get('user_id').value.length; i++) {\r\n          let query3 = \"insert into res_partner_res_users_rel (res_partner_id, res_users_id) values ( (select max (id) + 1 from res_partner ) , '\" + this.fiche_client.get('user_id').value[i].value + \"' )\";\r\n          this.dbm.insert_res_data(query3).then((data) => {\r\n          }).catch(e => {\r\n          });\r\n        }\r\n      }\r\n\r\n\r\n      if (this.fiche_client.get('permanent_POSM_id').value.length > 0) {\r\n        for (var i = 0; i < this.fiche_client.get('permanent_POSM_id').value.length; i++) {\r\n          if(this.fiche_client.get('permanent_POSM_id').value[i].value != null) {\r\n            let query4 = \"insert into i_t_permanent_posm_res_partner_rel (partner_id, permanent_posm_id) values ( (select max (id) + 1 from res_partner ) , '\" + this.fiche_client.get('permanent_POSM_id').value[i].value + \"' )\";\r\n            this.dbm.insert_res_data(query4).then(() => {\r\n            }).catch(e => {\r\n            });\r\n          }\r\n        }\r\n      }\r\n\r\n      console.log(\"547 => \" , query)\r\n\r\n      this.dbm.insert_res_data(query).then(() => {\r\n\r\n        this.dbm.insert_data_for_sync(\"res.partner\", \"(select max(res_partner.id) from res_partner)\", 1).then(() => {\r\n          this.dbm.insert_res_data(query2).then(() => {\r\n            this.load2.dismiss();\r\n            this.make_toast(\"Insertion avec succès\");\r\n            this.router.navigate(['fiches-client'], this.navigationExtras);\r\n          }).catch(e => {\r\n          })\r\n        })\r\n      }).catch(e => {\r\n        this.load2.dismiss();\r\n      });\r\n    }\r\n  }\r\n\r\n  abort_new_client() {\r\n\r\n  }\r\n\r\n  edit_image() {\r\n\r\n  }\r\n\r\n  delete_image() {\r\n\r\n  }\r\n\r\n  regionChange(event) {\r\n    this.i_t_agence_filtered = this.i_t_agence.filter(function (agence_filtered) {\r\n      return agence_filtered.region_id == event;\r\n    });\r\n  }\r\n\r\n  agenceChange(event) {\r\n    /*this.i_t_zone_filtered = this.i_t_zone.filter(function(zone_filtered) {\r\n      return zone_filtered.agence_id == event;\r\n    });*/\r\n    this.dbm.get_secteur_fitered(event).then(data => {\r\n      this.i_t_secteur_filtered = data;\r\n    })\r\n  }\r\n\r\n  zoneChange(event) {\r\n    this.i_t_secteur_filtered = this.i_t_secteur.filter(function (secteur_filtered) {\r\n      return secteur_filtered.agence_id == event;\r\n    });\r\n  }\r\n\r\n  secteurChange(event) {\r\n    let secteur_id = event;\r\n    this.dbm.get_user_by_secteur(secteur_id)\r\n      .then((data: any) => {\r\n        if (data) {\r\n          this.users_same_secteur = data;\r\n          this.fiche_client.controls['user_id'].disable();\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n  activite_pos_Change(event) {\r\n\r\n    if (event) {\r\n      let activite = this.i_t_activite_pos.find(function (pos) {\r\n        return pos.id == event;\r\n      });\r\n\r\n      if (activite.canal_id != null) {\r\n        this.canal_result = this.i_t_canal.find(function (can) {\r\n          return activite.canal_id == can.id;\r\n        });\r\n        this.fiche_client.controls['canal_id'].setValue(this.canal_result.id);\r\n      }\r\n\r\n      else {\r\n        this.canal_result = {\r\n          id: null,\r\n          name: null\r\n        }\r\n        this.fiche_client.controls['canal_id'].setValue(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  open_menu() {\r\n    this.router.navigate(['fiches-client'], this.navigationExtras)\r\n  }\r\n  data_cmp: any;\r\n  Deconnexion() {\r\n    Auth.access = true;\r\n    this.storage.get('data_p2')\r\n      .then((data2: any) => {\r\n        this.data_cmp = JSON.parse(data2);\r\n        this.dbm.Updata_active_Login(this.data_cmp.id);\r\n        this.storage.remove(\"data_p2\");\r\n      })\r\n    this.router.navigate(['home'], this.navigationExtras);\r\n  }\r\n\r\n  open_full_screen() {\r\n    this.display_2 = true;\r\n  }\r\n\r\n  remove_image() {\r\n    this.filePath = null;\r\n  }\r\n\r\n  filterSourceAppro(event_souce_appro) {\r\n    this.dbm.get_name_id_fournisseur(event_souce_appro.query).then(data => {\r\n      console.log(data) ;\r\n      this.filteredSourceAppro = data ;\r\n    }) ;\r\n  }\r\n\r\n  filterfournisseur_principal(event_souce_appro) {\r\n    this.dbm.get_name_id_fournisseur(event_souce_appro.query).then(data => {\r\n      console.log(data) ;\r\n      this.filteredfournisseur_principal = data ;\r\n    }) ;\r\n  }\r\n\r\n  filterfournisseur_secondaire(event_souce_appro) {\r\n    this.dbm.get_name_id_fournisseur(event_souce_appro.query).then(data => {\r\n      console.log(data) ;\r\n      this.filteredfournisseur_secondaire = data ;\r\n    }) ;\r\n  }\r\n\r\n  remove_special_charachter(soratra ) : string {\r\n    if (soratra == null) {\r\n      return \"\" ;\r\n    }\r\n    else {\r\n      return soratra.replace(/['\"<>]/g, ' ') ;\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}